// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

/*
Package rpcprotobuf is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetClientStatusResponse
	QuitClientResponse
	WalletsResponse
	UseWalletRequest
	UseWalletResponse
	CreateWalletRequest
	CreateWalletResponse
	ImportWalletRequest
	ImportWalletResponse
	ImportMnemonicRequest
	ExportWalletRequest
	ExportWalletResponse
	RemoveWalletRequest
	RemoveWalletResponse
	GetAddressBalanceRequest
	AddressAndBalance
	GetAddressBalanceResponse
	ValidateAddressRequest
	ValidateAddressResponse
	CreateAddressRequest
	CreateAddressResponse
	GetAddressesRequest
	GetAddressesResponse
	GetWalletBalanceRequest
	GetWalletBalanceResponse
	TxHistoryDetails
	TxHistoryResponse
	TxHistoryRequest
	TransactionInput
	DecodeRawTransactionRequest
	DecodeRawTransactionResponse
	CreateRawTransactionRequest
	AutoCreateTransactionRequest
	CreateRawTransactionResponse
	CreateStakingTransactionRequest
	GetBlockStakingRewardRequest
	GetBlockStakingRewardResponse
	GetStakingHistoryRequest
	GetStakingHistoryResponse
	SendRawTransactionRequest
	SendRawTransactionResponse
	GetTransactionFeeRequest
	GetTransactionFeeResponse
	BlockInfoForTx
	Vin
	Vout
	GetRawTransactionRequest
	GetRawTransactionResponse
	GetTxStatusRequest
	GetTxStatusResponse
	SignRawTransactionRequest
	SignRawTransactionResponse
	GetUtxoRequest
	UTXO
	AddressUTXO
	GetUtxoResponse
	GetAddressBindingRequest
	GetAddressBindingResponse
	GetBindingHistoryRequest
	GetBindingHistoryResponse
	CreateBindingTransactionRequest
	GetBestBlockResponse
	GetWalletMnemonicRequest
	GetWalletMnemonicResponse
*/
package rpcprotobuf

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetClientStatusResponse struct {
	PeerListening    bool                                  `protobuf:"varint,1,opt,name=peer_listening,json=peerListening,proto3" json:"peer_listening,omitempty"`
	Syncing          bool                                  `protobuf:"varint,2,opt,name=syncing,proto3" json:"syncing,omitempty"`
	ChainId          string                                `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	LocalBestHeight  uint64                                `protobuf:"varint,4,opt,name=local_best_height,json=localBestHeight,proto3" json:"local_best_height,omitempty"`
	KnownBestHeight  uint64                                `protobuf:"varint,5,opt,name=known_best_height,json=knownBestHeight,proto3" json:"known_best_height,omitempty"`
	WalletSyncHeight uint64                                `protobuf:"varint,6,opt,name=wallet_sync_height,json=walletSyncHeight,proto3" json:"wallet_sync_height,omitempty"`
	PeerCount        *GetClientStatusResponsePeerCountInfo `protobuf:"bytes,7,opt,name=peer_count,json=peerCount" json:"peer_count,omitempty"`
	Peers            *GetClientStatusResponsePeerList      `protobuf:"bytes,8,opt,name=peers" json:"peers,omitempty"`
}

func (m *GetClientStatusResponse) Reset()                    { *m = GetClientStatusResponse{} }
func (m *GetClientStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetClientStatusResponse) ProtoMessage()               {}
func (*GetClientStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{0} }

func (m *GetClientStatusResponse) GetPeerListening() bool {
	if m != nil {
		return m.PeerListening
	}
	return false
}

func (m *GetClientStatusResponse) GetSyncing() bool {
	if m != nil {
		return m.Syncing
	}
	return false
}

func (m *GetClientStatusResponse) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *GetClientStatusResponse) GetLocalBestHeight() uint64 {
	if m != nil {
		return m.LocalBestHeight
	}
	return 0
}

func (m *GetClientStatusResponse) GetKnownBestHeight() uint64 {
	if m != nil {
		return m.KnownBestHeight
	}
	return 0
}

func (m *GetClientStatusResponse) GetWalletSyncHeight() uint64 {
	if m != nil {
		return m.WalletSyncHeight
	}
	return 0
}

func (m *GetClientStatusResponse) GetPeerCount() *GetClientStatusResponsePeerCountInfo {
	if m != nil {
		return m.PeerCount
	}
	return nil
}

func (m *GetClientStatusResponse) GetPeers() *GetClientStatusResponsePeerList {
	if m != nil {
		return m.Peers
	}
	return nil
}

type GetClientStatusResponsePeerCountInfo struct {
	Total    uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Outbound uint32 `protobuf:"varint,2,opt,name=outbound,proto3" json:"outbound,omitempty"`
	Inbound  uint32 `protobuf:"varint,3,opt,name=inbound,proto3" json:"inbound,omitempty"`
}

func (m *GetClientStatusResponsePeerCountInfo) Reset()         { *m = GetClientStatusResponsePeerCountInfo{} }
func (m *GetClientStatusResponsePeerCountInfo) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerCountInfo) ProtoMessage()    {}
func (*GetClientStatusResponsePeerCountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{0, 0}
}

func (m *GetClientStatusResponsePeerCountInfo) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetClientStatusResponsePeerCountInfo) GetOutbound() uint32 {
	if m != nil {
		return m.Outbound
	}
	return 0
}

func (m *GetClientStatusResponsePeerCountInfo) GetInbound() uint32 {
	if m != nil {
		return m.Inbound
	}
	return 0
}

type GetClientStatusResponsePeerInfo struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Direction string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (m *GetClientStatusResponsePeerInfo) Reset()         { *m = GetClientStatusResponsePeerInfo{} }
func (m *GetClientStatusResponsePeerInfo) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerInfo) ProtoMessage()    {}
func (*GetClientStatusResponsePeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{0, 1}
}

func (m *GetClientStatusResponsePeerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetClientStatusResponsePeerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetClientStatusResponsePeerInfo) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

type GetClientStatusResponsePeerList struct {
	Outbound []*GetClientStatusResponsePeerInfo `protobuf:"bytes,1,rep,name=outbound" json:"outbound,omitempty"`
	Inbound  []*GetClientStatusResponsePeerInfo `protobuf:"bytes,2,rep,name=inbound" json:"inbound,omitempty"`
	Other    []*GetClientStatusResponsePeerInfo `protobuf:"bytes,3,rep,name=other" json:"other,omitempty"`
}

func (m *GetClientStatusResponsePeerList) Reset()         { *m = GetClientStatusResponsePeerList{} }
func (m *GetClientStatusResponsePeerList) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerList) ProtoMessage()    {}
func (*GetClientStatusResponsePeerList) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{0, 2}
}

func (m *GetClientStatusResponsePeerList) GetOutbound() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Outbound
	}
	return nil
}

func (m *GetClientStatusResponsePeerList) GetInbound() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Inbound
	}
	return nil
}

func (m *GetClientStatusResponsePeerList) GetOther() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Other
	}
	return nil
}

type QuitClientResponse struct {
	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *QuitClientResponse) Reset()                    { *m = QuitClientResponse{} }
func (m *QuitClientResponse) String() string            { return proto.CompactTextString(m) }
func (*QuitClientResponse) ProtoMessage()               {}
func (*QuitClientResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{1} }

func (m *QuitClientResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QuitClientResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type WalletsResponse struct {
	Wallets []*WalletsResponse_WalletSummary `protobuf:"bytes,1,rep,name=wallets" json:"wallets,omitempty"`
}

func (m *WalletsResponse) Reset()                    { *m = WalletsResponse{} }
func (m *WalletsResponse) String() string            { return proto.CompactTextString(m) }
func (*WalletsResponse) ProtoMessage()               {}
func (*WalletsResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{2} }

func (m *WalletsResponse) GetWallets() []*WalletsResponse_WalletSummary {
	if m != nil {
		return m.Wallets
	}
	return nil
}

type WalletsResponse_WalletSummary struct {
	WalletId  string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Type      uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Version   uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Remarks   string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
	Status    uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	StatusMsg string `protobuf:"bytes,6,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
}

func (m *WalletsResponse_WalletSummary) Reset()         { *m = WalletsResponse_WalletSummary{} }
func (m *WalletsResponse_WalletSummary) String() string { return proto.CompactTextString(m) }
func (*WalletsResponse_WalletSummary) ProtoMessage()    {}
func (*WalletsResponse_WalletSummary) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{2, 0}
}

func (m *WalletsResponse_WalletSummary) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *WalletsResponse_WalletSummary) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *WalletsResponse_WalletSummary) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WalletsResponse_WalletSummary) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *WalletsResponse_WalletSummary) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WalletsResponse_WalletSummary) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

type UseWalletRequest struct {
	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (m *UseWalletRequest) Reset()                    { *m = UseWalletRequest{} }
func (m *UseWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*UseWalletRequest) ProtoMessage()               {}
func (*UseWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{3} }

func (m *UseWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type UseWalletResponse struct {
	ChainId          string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	WalletId         string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Type             uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Version          uint32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	TotalBalance     string `protobuf:"bytes,5,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	ExternalKeyCount int32  `protobuf:"varint,6,opt,name=external_key_count,json=externalKeyCount,proto3" json:"external_key_count,omitempty"`
	InternalKeyCount int32  `protobuf:"varint,7,opt,name=internal_key_count,json=internalKeyCount,proto3" json:"internal_key_count,omitempty"`
	Remarks          string `protobuf:"bytes,8,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (m *UseWalletResponse) Reset()                    { *m = UseWalletResponse{} }
func (m *UseWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*UseWalletResponse) ProtoMessage()               {}
func (*UseWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{4} }

func (m *UseWalletResponse) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *UseWalletResponse) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *UseWalletResponse) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UseWalletResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UseWalletResponse) GetTotalBalance() string {
	if m != nil {
		return m.TotalBalance
	}
	return ""
}

func (m *UseWalletResponse) GetExternalKeyCount() int32 {
	if m != nil {
		return m.ExternalKeyCount
	}
	return 0
}

func (m *UseWalletResponse) GetInternalKeyCount() int32 {
	if m != nil {
		return m.InternalKeyCount
	}
	return 0
}

func (m *UseWalletResponse) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

type CreateWalletRequest struct {
	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Remarks    string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	BitSize    int32  `protobuf:"varint,3,opt,name=bit_size,json=bitSize,proto3" json:"bit_size,omitempty"`
}

func (m *CreateWalletRequest) Reset()                    { *m = CreateWalletRequest{} }
func (m *CreateWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWalletRequest) ProtoMessage()               {}
func (*CreateWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{5} }

func (m *CreateWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *CreateWalletRequest) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *CreateWalletRequest) GetBitSize() int32 {
	if m != nil {
		return m.BitSize
	}
	return 0
}

type CreateWalletResponse struct {
	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Version  uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *CreateWalletResponse) Reset()                    { *m = CreateWalletResponse{} }
func (m *CreateWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateWalletResponse) ProtoMessage()               {}
func (*CreateWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{6} }

func (m *CreateWalletResponse) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *CreateWalletResponse) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *CreateWalletResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ImportWalletRequest struct {
	Keystore   string `protobuf:"bytes,1,opt,name=keystore,proto3" json:"keystore,omitempty"`
	Passphrase string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *ImportWalletRequest) Reset()                    { *m = ImportWalletRequest{} }
func (m *ImportWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportWalletRequest) ProtoMessage()               {}
func (*ImportWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{7} }

func (m *ImportWalletRequest) GetKeystore() string {
	if m != nil {
		return m.Keystore
	}
	return ""
}

func (m *ImportWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type ImportWalletResponse struct {
	Ok       bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	WalletId string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Type     uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Version  uint32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Remarks  string `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (m *ImportWalletResponse) Reset()                    { *m = ImportWalletResponse{} }
func (m *ImportWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*ImportWalletResponse) ProtoMessage()               {}
func (*ImportWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{8} }

func (m *ImportWalletResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *ImportWalletResponse) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ImportWalletResponse) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ImportWalletResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ImportWalletResponse) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

type ImportMnemonicRequest struct {
	Mnemonic      string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Passphrase    string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Remarks       string `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
	ExternalIndex uint32 `protobuf:"varint,4,opt,name=external_index,json=externalIndex,proto3" json:"external_index,omitempty"`
	InternalIndex uint32 `protobuf:"varint,5,opt,name=internal_index,json=internalIndex,proto3" json:"internal_index,omitempty"`
}

func (m *ImportMnemonicRequest) Reset()                    { *m = ImportMnemonicRequest{} }
func (m *ImportMnemonicRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportMnemonicRequest) ProtoMessage()               {}
func (*ImportMnemonicRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{9} }

func (m *ImportMnemonicRequest) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *ImportMnemonicRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *ImportMnemonicRequest) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *ImportMnemonicRequest) GetExternalIndex() uint32 {
	if m != nil {
		return m.ExternalIndex
	}
	return 0
}

func (m *ImportMnemonicRequest) GetInternalIndex() uint32 {
	if m != nil {
		return m.InternalIndex
	}
	return 0
}

type ExportWalletRequest struct {
	WalletId   string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Passphrase string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *ExportWalletRequest) Reset()                    { *m = ExportWalletRequest{} }
func (m *ExportWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*ExportWalletRequest) ProtoMessage()               {}
func (*ExportWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{10} }

func (m *ExportWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ExportWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type ExportWalletResponse struct {
	Keystore string `protobuf:"bytes,1,opt,name=keystore,proto3" json:"keystore,omitempty"`
}

func (m *ExportWalletResponse) Reset()                    { *m = ExportWalletResponse{} }
func (m *ExportWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*ExportWalletResponse) ProtoMessage()               {}
func (*ExportWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{11} }

func (m *ExportWalletResponse) GetKeystore() string {
	if m != nil {
		return m.Keystore
	}
	return ""
}

type RemoveWalletRequest struct {
	WalletId   string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Passphrase string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *RemoveWalletRequest) Reset()                    { *m = RemoveWalletRequest{} }
func (m *RemoveWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveWalletRequest) ProtoMessage()               {}
func (*RemoveWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{12} }

func (m *RemoveWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *RemoveWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type RemoveWalletResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (m *RemoveWalletResponse) Reset()                    { *m = RemoveWalletResponse{} }
func (m *RemoveWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveWalletResponse) ProtoMessage()               {}
func (*RemoveWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{13} }

func (m *RemoveWalletResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type GetAddressBalanceRequest struct {
	RequiredConfirmations int32    `protobuf:"varint,1,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	Addresses             []string `protobuf:"bytes,2,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *GetAddressBalanceRequest) Reset()                    { *m = GetAddressBalanceRequest{} }
func (m *GetAddressBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressBalanceRequest) ProtoMessage()               {}
func (*GetAddressBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{14} }

func (m *GetAddressBalanceRequest) GetRequiredConfirmations() int32 {
	if m != nil {
		return m.RequiredConfirmations
	}
	return 0
}

func (m *GetAddressBalanceRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type AddressAndBalance struct {
	Address             string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Total               string `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	Spendable           string `protobuf:"bytes,3,opt,name=spendable,proto3" json:"spendable,omitempty"`
	WithdrawableStaking string `protobuf:"bytes,4,opt,name=withdrawable_staking,json=withdrawableStaking,proto3" json:"withdrawable_staking,omitempty"`
	WithdrawableBinding string `protobuf:"bytes,5,opt,name=withdrawable_binding,json=withdrawableBinding,proto3" json:"withdrawable_binding,omitempty"`
}

func (m *AddressAndBalance) Reset()                    { *m = AddressAndBalance{} }
func (m *AddressAndBalance) String() string            { return proto.CompactTextString(m) }
func (*AddressAndBalance) ProtoMessage()               {}
func (*AddressAndBalance) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{15} }

func (m *AddressAndBalance) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressAndBalance) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *AddressAndBalance) GetSpendable() string {
	if m != nil {
		return m.Spendable
	}
	return ""
}

func (m *AddressAndBalance) GetWithdrawableStaking() string {
	if m != nil {
		return m.WithdrawableStaking
	}
	return ""
}

func (m *AddressAndBalance) GetWithdrawableBinding() string {
	if m != nil {
		return m.WithdrawableBinding
	}
	return ""
}

type GetAddressBalanceResponse struct {
	Balances []*AddressAndBalance `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *GetAddressBalanceResponse) Reset()                    { *m = GetAddressBalanceResponse{} }
func (m *GetAddressBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAddressBalanceResponse) ProtoMessage()               {}
func (*GetAddressBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{16} }

func (m *GetAddressBalanceResponse) GetBalances() []*AddressAndBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type ValidateAddressRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *ValidateAddressRequest) Reset()                    { *m = ValidateAddressRequest{} }
func (m *ValidateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidateAddressRequest) ProtoMessage()               {}
func (*ValidateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{17} }

func (m *ValidateAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ValidateAddressResponse struct {
	IsValid bool   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	IsMine  bool   `protobuf:"varint,2,opt,name=is_mine,json=isMine,proto3" json:"is_mine,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Version int32  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *ValidateAddressResponse) Reset()                    { *m = ValidateAddressResponse{} }
func (m *ValidateAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidateAddressResponse) ProtoMessage()               {}
func (*ValidateAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{18} }

func (m *ValidateAddressResponse) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *ValidateAddressResponse) GetIsMine() bool {
	if m != nil {
		return m.IsMine
	}
	return false
}

func (m *ValidateAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ValidateAddressResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CreateAddressRequest struct {
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *CreateAddressRequest) Reset()                    { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()               {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{19} }

func (m *CreateAddressRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CreateAddressResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *CreateAddressResponse) Reset()                    { *m = CreateAddressResponse{} }
func (m *CreateAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressResponse) ProtoMessage()               {}
func (*CreateAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{20} }

func (m *CreateAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetAddressesRequest struct {
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *GetAddressesRequest) Reset()                    { *m = GetAddressesRequest{} }
func (m *GetAddressesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressesRequest) ProtoMessage()               {}
func (*GetAddressesRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{21} }

func (m *GetAddressesRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetAddressesResponse struct {
	Details []*GetAddressesResponse_AddressDetail `protobuf:"bytes,1,rep,name=details" json:"details,omitempty"`
}

func (m *GetAddressesResponse) Reset()                    { *m = GetAddressesResponse{} }
func (m *GetAddressesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAddressesResponse) ProtoMessage()               {}
func (*GetAddressesResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{22} }

func (m *GetAddressesResponse) GetDetails() []*GetAddressesResponse_AddressDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type GetAddressesResponse_AddressDetail struct {
	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Version    int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Used       bool   `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	StdAddress string `protobuf:"bytes,4,opt,name=std_address,json=stdAddress,proto3" json:"std_address,omitempty"`
}

func (m *GetAddressesResponse_AddressDetail) Reset()         { *m = GetAddressesResponse_AddressDetail{} }
func (m *GetAddressesResponse_AddressDetail) String() string { return proto.CompactTextString(m) }
func (*GetAddressesResponse_AddressDetail) ProtoMessage()    {}
func (*GetAddressesResponse_AddressDetail) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{22, 0}
}

func (m *GetAddressesResponse_AddressDetail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAddressesResponse_AddressDetail) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetAddressesResponse_AddressDetail) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *GetAddressesResponse_AddressDetail) GetStdAddress() string {
	if m != nil {
		return m.StdAddress
	}
	return ""
}

type GetWalletBalanceRequest struct {
	RequiredConfirmations int32 `protobuf:"varint,1,opt,name=required_confirmations,json=requiredConfirmations,proto3" json:"required_confirmations,omitempty"`
	Detail                bool  `protobuf:"varint,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (m *GetWalletBalanceRequest) Reset()                    { *m = GetWalletBalanceRequest{} }
func (m *GetWalletBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWalletBalanceRequest) ProtoMessage()               {}
func (*GetWalletBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{23} }

func (m *GetWalletBalanceRequest) GetRequiredConfirmations() int32 {
	if m != nil {
		return m.RequiredConfirmations
	}
	return 0
}

func (m *GetWalletBalanceRequest) GetDetail() bool {
	if m != nil {
		return m.Detail
	}
	return false
}

type GetWalletBalanceResponse struct {
	WalletId string                           `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Total    string                           `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	Detail   *GetWalletBalanceResponse_Detail `protobuf:"bytes,3,opt,name=detail" json:"detail,omitempty"`
}

func (m *GetWalletBalanceResponse) Reset()                    { *m = GetWalletBalanceResponse{} }
func (m *GetWalletBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetWalletBalanceResponse) ProtoMessage()               {}
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{24} }

func (m *GetWalletBalanceResponse) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetWalletBalanceResponse) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *GetWalletBalanceResponse) GetDetail() *GetWalletBalanceResponse_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

type GetWalletBalanceResponse_Detail struct {
	Spendable           string `protobuf:"bytes,1,opt,name=spendable,proto3" json:"spendable,omitempty"`
	WithdrawableStaking string `protobuf:"bytes,2,opt,name=withdrawable_staking,json=withdrawableStaking,proto3" json:"withdrawable_staking,omitempty"`
	WithdrawableBinding string `protobuf:"bytes,3,opt,name=withdrawable_binding,json=withdrawableBinding,proto3" json:"withdrawable_binding,omitempty"`
}

func (m *GetWalletBalanceResponse_Detail) Reset()         { *m = GetWalletBalanceResponse_Detail{} }
func (m *GetWalletBalanceResponse_Detail) String() string { return proto.CompactTextString(m) }
func (*GetWalletBalanceResponse_Detail) ProtoMessage()    {}
func (*GetWalletBalanceResponse_Detail) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{24, 0}
}

func (m *GetWalletBalanceResponse_Detail) GetSpendable() string {
	if m != nil {
		return m.Spendable
	}
	return ""
}

func (m *GetWalletBalanceResponse_Detail) GetWithdrawableStaking() string {
	if m != nil {
		return m.WithdrawableStaking
	}
	return ""
}

func (m *GetWalletBalanceResponse_Detail) GetWithdrawableBinding() string {
	if m != nil {
		return m.WithdrawableBinding
	}
	return ""
}

type TxHistoryDetails struct {
	TxId          string                     `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	BlockHeight   uint64                     `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Inputs        []*TxHistoryDetails_Input  `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	Outputs       []*TxHistoryDetails_Output `protobuf:"bytes,4,rep,name=outputs" json:"outputs,omitempty"`
	FromAddresses []string                   `protobuf:"bytes,5,rep,name=from_addresses,json=fromAddresses" json:"from_addresses,omitempty"`
}

func (m *TxHistoryDetails) Reset()                    { *m = TxHistoryDetails{} }
func (m *TxHistoryDetails) String() string            { return proto.CompactTextString(m) }
func (*TxHistoryDetails) ProtoMessage()               {}
func (*TxHistoryDetails) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{25} }

func (m *TxHistoryDetails) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxHistoryDetails) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *TxHistoryDetails) GetInputs() []*TxHistoryDetails_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TxHistoryDetails) GetOutputs() []*TxHistoryDetails_Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *TxHistoryDetails) GetFromAddresses() []string {
	if m != nil {
		return m.FromAddresses
	}
	return nil
}

type TxHistoryDetails_Input struct {
	TxId  string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Index int64  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *TxHistoryDetails_Input) Reset()                    { *m = TxHistoryDetails_Input{} }
func (m *TxHistoryDetails_Input) String() string            { return proto.CompactTextString(m) }
func (*TxHistoryDetails_Input) ProtoMessage()               {}
func (*TxHistoryDetails_Input) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{25, 0} }

func (m *TxHistoryDetails_Input) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxHistoryDetails_Input) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type TxHistoryDetails_Output struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *TxHistoryDetails_Output) Reset()                    { *m = TxHistoryDetails_Output{} }
func (m *TxHistoryDetails_Output) String() string            { return proto.CompactTextString(m) }
func (*TxHistoryDetails_Output) ProtoMessage()               {}
func (*TxHistoryDetails_Output) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{25, 1} }

func (m *TxHistoryDetails_Output) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TxHistoryDetails_Output) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type TxHistoryResponse struct {
	Histories []*TxHistoryDetails `protobuf:"bytes,1,rep,name=histories" json:"histories,omitempty"`
}

func (m *TxHistoryResponse) Reset()                    { *m = TxHistoryResponse{} }
func (m *TxHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*TxHistoryResponse) ProtoMessage()               {}
func (*TxHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{26} }

func (m *TxHistoryResponse) GetHistories() []*TxHistoryDetails {
	if m != nil {
		return m.Histories
	}
	return nil
}

type TxHistoryRequest struct {
	Count   uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *TxHistoryRequest) Reset()                    { *m = TxHistoryRequest{} }
func (m *TxHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*TxHistoryRequest) ProtoMessage()               {}
func (*TxHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{27} }

func (m *TxHistoryRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TxHistoryRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type TransactionInput struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (m *TransactionInput) Reset()                    { *m = TransactionInput{} }
func (m *TransactionInput) String() string            { return proto.CompactTextString(m) }
func (*TransactionInput) ProtoMessage()               {}
func (*TransactionInput) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{28} }

func (m *TransactionInput) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TransactionInput) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

type DecodeRawTransactionRequest struct {
	Hex string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (m *DecodeRawTransactionRequest) Reset()                    { *m = DecodeRawTransactionRequest{} }
func (m *DecodeRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*DecodeRawTransactionRequest) ProtoMessage()               {}
func (*DecodeRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{29} }

func (m *DecodeRawTransactionRequest) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type DecodeRawTransactionResponse struct {
	TxId     string                               `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Version  int32                                `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	LockTime int64                                `protobuf:"varint,3,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Size    int32                                `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Vin      []*DecodeRawTransactionResponse_Vin  `protobuf:"bytes,5,rep,name=vin" json:"vin,omitempty"`
	Vout     []*DecodeRawTransactionResponse_Vout `protobuf:"bytes,6,rep,name=vout" json:"vout,omitempty"`
	Payload  string                               `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *DecodeRawTransactionResponse) Reset()                    { *m = DecodeRawTransactionResponse{} }
func (m *DecodeRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*DecodeRawTransactionResponse) ProtoMessage()               {}
func (*DecodeRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{30} }

func (m *DecodeRawTransactionResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *DecodeRawTransactionResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetVin() []*DecodeRawTransactionResponse_Vin {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *DecodeRawTransactionResponse) GetVout() []*DecodeRawTransactionResponse_Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *DecodeRawTransactionResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type DecodeRawTransactionResponse_Vin struct {
	TxId     string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout     uint32   `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence uint64   `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Witness  []string `protobuf:"bytes,4,rep,name=witness" json:"witness,omitempty"`
}

func (m *DecodeRawTransactionResponse_Vin) Reset()         { *m = DecodeRawTransactionResponse_Vin{} }
func (m *DecodeRawTransactionResponse_Vin) String() string { return proto.CompactTextString(m) }
func (*DecodeRawTransactionResponse_Vin) ProtoMessage()    {}
func (*DecodeRawTransactionResponse_Vin) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{30, 0}
}

func (m *DecodeRawTransactionResponse_Vin) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *DecodeRawTransactionResponse_Vin) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *DecodeRawTransactionResponse_Vin) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *DecodeRawTransactionResponse_Vin) GetWitness() []string {
	if m != nil {
		return m.Witness
	}
	return nil
}

type DecodeRawTransactionResponse_Vout struct {
	Value     string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	N         uint32   `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Type      uint32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ScriptAsm string   `protobuf:"bytes,4,opt,name=script_asm,json=scriptAsm,proto3" json:"script_asm,omitempty"`
	ScriptHex string   `protobuf:"bytes,5,opt,name=script_hex,json=scriptHex,proto3" json:"script_hex,omitempty"`
	Addresses []string `protobuf:"bytes,6,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *DecodeRawTransactionResponse_Vout) Reset()         { *m = DecodeRawTransactionResponse_Vout{} }
func (m *DecodeRawTransactionResponse_Vout) String() string { return proto.CompactTextString(m) }
func (*DecodeRawTransactionResponse_Vout) ProtoMessage()    {}
func (*DecodeRawTransactionResponse_Vout) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{30, 1}
}

func (m *DecodeRawTransactionResponse_Vout) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DecodeRawTransactionResponse_Vout) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *DecodeRawTransactionResponse_Vout) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DecodeRawTransactionResponse_Vout) GetScriptAsm() string {
	if m != nil {
		return m.ScriptAsm
	}
	return ""
}

func (m *DecodeRawTransactionResponse_Vout) GetScriptHex() string {
	if m != nil {
		return m.ScriptHex
	}
	return ""
}

func (m *DecodeRawTransactionResponse_Vout) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type CreateRawTransactionRequest struct {
	Inputs          []*TransactionInput `protobuf:"bytes,1,rep,name=inputs" json:"inputs,omitempty"`
	Amounts         map[string]string   `protobuf:"bytes,2,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LockTime        uint64              `protobuf:"varint,3,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	ChangeAddress   string              `protobuf:"bytes,4,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	Subtractfeefrom []string            `protobuf:"bytes,5,rep,name=subtractfeefrom" json:"subtractfeefrom,omitempty"`
}

func (m *CreateRawTransactionRequest) Reset()                    { *m = CreateRawTransactionRequest{} }
func (m *CreateRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRawTransactionRequest) ProtoMessage()               {}
func (*CreateRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{31} }

func (m *CreateRawTransactionRequest) GetInputs() []*TransactionInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *CreateRawTransactionRequest) GetAmounts() map[string]string {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *CreateRawTransactionRequest) GetLockTime() uint64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *CreateRawTransactionRequest) GetChangeAddress() string {
	if m != nil {
		return m.ChangeAddress
	}
	return ""
}

func (m *CreateRawTransactionRequest) GetSubtractfeefrom() []string {
	if m != nil {
		return m.Subtractfeefrom
	}
	return nil
}

type AutoCreateTransactionRequest struct {
	Amounts       map[string]string `protobuf:"bytes,1,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LockTime      uint64            `protobuf:"varint,2,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Fee           string            `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	FromAddress   string            `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ChangeAddress string            `protobuf:"bytes,5,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
}

func (m *AutoCreateTransactionRequest) Reset()                    { *m = AutoCreateTransactionRequest{} }
func (m *AutoCreateTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*AutoCreateTransactionRequest) ProtoMessage()               {}
func (*AutoCreateTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{32} }

func (m *AutoCreateTransactionRequest) GetAmounts() map[string]string {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *AutoCreateTransactionRequest) GetLockTime() uint64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *AutoCreateTransactionRequest) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *AutoCreateTransactionRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *AutoCreateTransactionRequest) GetChangeAddress() string {
	if m != nil {
		return m.ChangeAddress
	}
	return ""
}

type CreateRawTransactionResponse struct {
	Hex string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (m *CreateRawTransactionResponse) Reset()                    { *m = CreateRawTransactionResponse{} }
func (m *CreateRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRawTransactionResponse) ProtoMessage()               {}
func (*CreateRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{33} }

func (m *CreateRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type CreateStakingTransactionRequest struct {
	FromAddress    string `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	StakingAddress string `protobuf:"bytes,2,opt,name=staking_address,json=stakingAddress,proto3" json:"staking_address,omitempty"`
	Amount         string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	FrozenPeriod   uint32 `protobuf:"varint,4,opt,name=frozen_period,json=frozenPeriod,proto3" json:"frozen_period,omitempty"`
	Fee            string `protobuf:"bytes,5,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (m *CreateStakingTransactionRequest) Reset()         { *m = CreateStakingTransactionRequest{} }
func (m *CreateStakingTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStakingTransactionRequest) ProtoMessage()    {}
func (*CreateStakingTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{34}
}

func (m *CreateStakingTransactionRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *CreateStakingTransactionRequest) GetStakingAddress() string {
	if m != nil {
		return m.StakingAddress
	}
	return ""
}

func (m *CreateStakingTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *CreateStakingTransactionRequest) GetFrozenPeriod() uint32 {
	if m != nil {
		return m.FrozenPeriod
	}
	return 0
}

func (m *CreateStakingTransactionRequest) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

type GetBlockStakingRewardRequest struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *GetBlockStakingRewardRequest) Reset()                    { *m = GetBlockStakingRewardRequest{} }
func (m *GetBlockStakingRewardRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockStakingRewardRequest) ProtoMessage()               {}
func (*GetBlockStakingRewardRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{35} }

func (m *GetBlockStakingRewardRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockStakingRewardResponse struct {
	Details []*GetBlockStakingRewardResponse_RewardDetail `protobuf:"bytes,1,rep,name=details" json:"details,omitempty"`
	Height  uint64                                        `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *GetBlockStakingRewardResponse) Reset()         { *m = GetBlockStakingRewardResponse{} }
func (m *GetBlockStakingRewardResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockStakingRewardResponse) ProtoMessage()    {}
func (*GetBlockStakingRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{36}
}

func (m *GetBlockStakingRewardResponse) GetDetails() []*GetBlockStakingRewardResponse_RewardDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *GetBlockStakingRewardResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockStakingRewardResponse_RewardDetail struct {
	Rank    int32   `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Amount  string  `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Weight  float64 `protobuf:"fixed64,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Address string  `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Profit  string  `protobuf:"bytes,5,opt,name=profit,proto3" json:"profit,omitempty"`
}

func (m *GetBlockStakingRewardResponse_RewardDetail) Reset() {
	*m = GetBlockStakingRewardResponse_RewardDetail{}
}
func (m *GetBlockStakingRewardResponse_RewardDetail) String() string {
	return proto.CompactTextString(m)
}
func (*GetBlockStakingRewardResponse_RewardDetail) ProtoMessage() {}
func (*GetBlockStakingRewardResponse_RewardDetail) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{36, 0}
}

func (m *GetBlockStakingRewardResponse_RewardDetail) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *GetBlockStakingRewardResponse_RewardDetail) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *GetBlockStakingRewardResponse_RewardDetail) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *GetBlockStakingRewardResponse_RewardDetail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetBlockStakingRewardResponse_RewardDetail) GetProfit() string {
	if m != nil {
		return m.Profit
	}
	return ""
}

type GetStakingHistoryRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (m *GetStakingHistoryRequest) Reset()                    { *m = GetStakingHistoryRequest{} }
func (m *GetStakingHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStakingHistoryRequest) ProtoMessage()               {}
func (*GetStakingHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{37} }

func (m *GetStakingHistoryRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GetStakingHistoryResponse struct {
	Txs     []*GetStakingHistoryResponse_Tx `protobuf:"bytes,1,rep,name=txs" json:"txs,omitempty"`
	Weights map[string]float64              `protobuf:"bytes,2,rep,name=weights" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (m *GetStakingHistoryResponse) Reset()                    { *m = GetStakingHistoryResponse{} }
func (m *GetStakingHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetStakingHistoryResponse) ProtoMessage()               {}
func (*GetStakingHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{38} }

func (m *GetStakingHistoryResponse) GetTxs() []*GetStakingHistoryResponse_Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *GetStakingHistoryResponse) GetWeights() map[string]float64 {
	if m != nil {
		return m.Weights
	}
	return nil
}

type GetStakingHistoryResponse_StakingUTXO struct {
	TxId         string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout         uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Amount       string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	FrozenPeriod uint32 `protobuf:"varint,5,opt,name=frozen_period,json=frozenPeriod,proto3" json:"frozen_period,omitempty"`
}

func (m *GetStakingHistoryResponse_StakingUTXO) Reset()         { *m = GetStakingHistoryResponse_StakingUTXO{} }
func (m *GetStakingHistoryResponse_StakingUTXO) String() string { return proto.CompactTextString(m) }
func (*GetStakingHistoryResponse_StakingUTXO) ProtoMessage()    {}
func (*GetStakingHistoryResponse_StakingUTXO) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{38, 0}
}

func (m *GetStakingHistoryResponse_StakingUTXO) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetStakingHistoryResponse_StakingUTXO) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *GetStakingHistoryResponse_StakingUTXO) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetStakingHistoryResponse_StakingUTXO) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *GetStakingHistoryResponse_StakingUTXO) GetFrozenPeriod() uint32 {
	if m != nil {
		return m.FrozenPeriod
	}
	return 0
}

type GetStakingHistoryResponse_Tx struct {
	TxId        string                                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Status      uint32                                 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	BlockHeight uint64                                 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Utxo        *GetStakingHistoryResponse_StakingUTXO `protobuf:"bytes,4,opt,name=utxo" json:"utxo,omitempty"`
}

func (m *GetStakingHistoryResponse_Tx) Reset()         { *m = GetStakingHistoryResponse_Tx{} }
func (m *GetStakingHistoryResponse_Tx) String() string { return proto.CompactTextString(m) }
func (*GetStakingHistoryResponse_Tx) ProtoMessage()    {}
func (*GetStakingHistoryResponse_Tx) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{38, 1}
}

func (m *GetStakingHistoryResponse_Tx) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetStakingHistoryResponse_Tx) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetStakingHistoryResponse_Tx) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetStakingHistoryResponse_Tx) GetUtxo() *GetStakingHistoryResponse_StakingUTXO {
	if m != nil {
		return m.Utxo
	}
	return nil
}

type SendRawTransactionRequest struct {
	Hex string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (m *SendRawTransactionRequest) Reset()                    { *m = SendRawTransactionRequest{} }
func (m *SendRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*SendRawTransactionRequest) ProtoMessage()               {}
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{39} }

func (m *SendRawTransactionRequest) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type SendRawTransactionResponse struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (m *SendRawTransactionResponse) Reset()                    { *m = SendRawTransactionResponse{} }
func (m *SendRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*SendRawTransactionResponse) ProtoMessage()               {}
func (*SendRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{40} }

func (m *SendRawTransactionResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type GetTransactionFeeRequest struct {
	Amounts    map[string]string   `protobuf:"bytes,1,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LockTime   uint64              `protobuf:"varint,2,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Inputs     []*TransactionInput `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	HasBinding bool                `protobuf:"varint,4,opt,name=has_binding,json=hasBinding,proto3" json:"has_binding,omitempty"`
}

func (m *GetTransactionFeeRequest) Reset()                    { *m = GetTransactionFeeRequest{} }
func (m *GetTransactionFeeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionFeeRequest) ProtoMessage()               {}
func (*GetTransactionFeeRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{41} }

func (m *GetTransactionFeeRequest) GetAmounts() map[string]string {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *GetTransactionFeeRequest) GetLockTime() uint64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *GetTransactionFeeRequest) GetInputs() []*TransactionInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *GetTransactionFeeRequest) GetHasBinding() bool {
	if m != nil {
		return m.HasBinding
	}
	return false
}

type GetTransactionFeeResponse struct {
	Fee string `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (m *GetTransactionFeeResponse) Reset()                    { *m = GetTransactionFeeResponse{} }
func (m *GetTransactionFeeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionFeeResponse) ProtoMessage()               {}
func (*GetTransactionFeeResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{42} }

func (m *GetTransactionFeeResponse) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

type BlockInfoForTx struct {
	Height    uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *BlockInfoForTx) Reset()                    { *m = BlockInfoForTx{} }
func (m *BlockInfoForTx) String() string            { return proto.CompactTextString(m) }
func (*BlockInfoForTx) ProtoMessage()               {}
func (*BlockInfoForTx) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{43} }

func (m *BlockInfoForTx) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfoForTx) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *BlockInfoForTx) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Vin struct {
	Value        string            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	N            uint32            `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Type         uint32            `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	RedeemDetail *Vin_RedeemDetail `protobuf:"bytes,4,opt,name=redeem_detail,json=redeemDetail" json:"redeem_detail,omitempty"`
}

func (m *Vin) Reset()                    { *m = Vin{} }
func (m *Vin) String() string            { return proto.CompactTextString(m) }
func (*Vin) ProtoMessage()               {}
func (*Vin) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{44} }

func (m *Vin) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Vin) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Vin) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Vin) GetRedeemDetail() *Vin_RedeemDetail {
	if m != nil {
		return m.RedeemDetail
	}
	return nil
}

type Vin_RedeemDetail struct {
	TxId      string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout      uint32   `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence  uint64   `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Witness   []string `protobuf:"bytes,4,rep,name=witness" json:"witness,omitempty"`
	Addresses []string `protobuf:"bytes,5,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *Vin_RedeemDetail) Reset()                    { *m = Vin_RedeemDetail{} }
func (m *Vin_RedeemDetail) String() string            { return proto.CompactTextString(m) }
func (*Vin_RedeemDetail) ProtoMessage()               {}
func (*Vin_RedeemDetail) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{44, 0} }

func (m *Vin_RedeemDetail) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Vin_RedeemDetail) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *Vin_RedeemDetail) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Vin_RedeemDetail) GetWitness() []string {
	if m != nil {
		return m.Witness
	}
	return nil
}

func (m *Vin_RedeemDetail) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type Vout struct {
	Value        string             `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	N            uint32             `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Type         uint32             `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ScriptDetail *Vout_ScriptDetail `protobuf:"bytes,4,opt,name=script_detail,json=scriptDetail" json:"script_detail,omitempty"`
}

func (m *Vout) Reset()                    { *m = Vout{} }
func (m *Vout) String() string            { return proto.CompactTextString(m) }
func (*Vout) ProtoMessage()               {}
func (*Vout) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{45} }

func (m *Vout) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Vout) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Vout) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Vout) GetScriptDetail() *Vout_ScriptDetail {
	if m != nil {
		return m.ScriptDetail
	}
	return nil
}

type Vout_ScriptDetail struct {
	Asm       string   `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex       string   `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	ReqSigs   int32    `protobuf:"varint,3,opt,name=req_sigs,json=reqSigs,proto3" json:"req_sigs,omitempty"`
	Addresses []string `protobuf:"bytes,4,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *Vout_ScriptDetail) Reset()                    { *m = Vout_ScriptDetail{} }
func (m *Vout_ScriptDetail) String() string            { return proto.CompactTextString(m) }
func (*Vout_ScriptDetail) ProtoMessage()               {}
func (*Vout_ScriptDetail) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{45, 0} }

func (m *Vout_ScriptDetail) GetAsm() string {
	if m != nil {
		return m.Asm
	}
	return ""
}

func (m *Vout_ScriptDetail) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *Vout_ScriptDetail) GetReqSigs() int32 {
	if m != nil {
		return m.ReqSigs
	}
	return 0
}

func (m *Vout_ScriptDetail) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type GetRawTransactionRequest struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (m *GetRawTransactionRequest) Reset()                    { *m = GetRawTransactionRequest{} }
func (m *GetRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRawTransactionRequest) ProtoMessage()               {}
func (*GetRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{46} }

func (m *GetRawTransactionRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type GetRawTransactionResponse struct {
	Hex           string          `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	TxId          string          `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Version       int32           `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	LockTime      int64           `protobuf:"varint,4,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Block         *BlockInfoForTx `protobuf:"bytes,5,opt,name=block" json:"block,omitempty"`
	Vin           []*Vin          `protobuf:"bytes,6,rep,name=vin" json:"vin,omitempty"`
	Vout          []*Vout         `protobuf:"bytes,7,rep,name=vout" json:"vout,omitempty"`
	Payload       string          `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Confirmations uint64          `protobuf:"varint,9,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Size         int32           `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	Fee           string          `protobuf:"bytes,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Status        int32           `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Coinbase      bool            `protobuf:"varint,13,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
}

func (m *GetRawTransactionResponse) Reset()                    { *m = GetRawTransactionResponse{} }
func (m *GetRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRawTransactionResponse) ProtoMessage()               {}
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{47} }

func (m *GetRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *GetRawTransactionResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetRawTransactionResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetRawTransactionResponse) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *GetRawTransactionResponse) GetBlock() *BlockInfoForTx {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *GetRawTransactionResponse) GetVin() []*Vin {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *GetRawTransactionResponse) GetVout() []*Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *GetRawTransactionResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *GetRawTransactionResponse) GetConfirmations() uint64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *GetRawTransactionResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetRawTransactionResponse) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *GetRawTransactionResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetRawTransactionResponse) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

type GetTxStatusRequest struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (m *GetTxStatusRequest) Reset()                    { *m = GetTxStatusRequest{} }
func (m *GetTxStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTxStatusRequest) ProtoMessage()               {}
func (*GetTxStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{48} }

func (m *GetTxStatusRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type GetTxStatusResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *GetTxStatusResponse) Reset()                    { *m = GetTxStatusResponse{} }
func (m *GetTxStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTxStatusResponse) ProtoMessage()               {}
func (*GetTxStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{49} }

func (m *GetTxStatusResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetTxStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type SignRawTransactionRequest struct {
	RawTx      string `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	Flags      string `protobuf:"bytes,2,opt,name=flags,proto3" json:"flags,omitempty"`
	Passphrase string `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *SignRawTransactionRequest) Reset()                    { *m = SignRawTransactionRequest{} }
func (m *SignRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*SignRawTransactionRequest) ProtoMessage()               {}
func (*SignRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{50} }

func (m *SignRawTransactionRequest) GetRawTx() string {
	if m != nil {
		return m.RawTx
	}
	return ""
}

func (m *SignRawTransactionRequest) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *SignRawTransactionRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SignRawTransactionResponse struct {
	Hex      string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	Complete bool   `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
}

func (m *SignRawTransactionResponse) Reset()                    { *m = SignRawTransactionResponse{} }
func (m *SignRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*SignRawTransactionResponse) ProtoMessage()               {}
func (*SignRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{51} }

func (m *SignRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *SignRawTransactionResponse) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

type GetUtxoRequest struct {
	Addresses []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *GetUtxoRequest) Reset()                    { *m = GetUtxoRequest{} }
func (m *GetUtxoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoRequest) ProtoMessage()               {}
func (*GetUtxoRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{52} }

func (m *GetUtxoRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type UTXO struct {
	TxId           string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout           uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount         string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Maturity       uint32 `protobuf:"varint,5,opt,name=maturity,proto3" json:"maturity,omitempty"`
	Confirmations  uint32 `protobuf:"varint,6,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	SpentByUnmined bool   `protobuf:"varint,7,opt,name=spent_by_unmined,json=spentByUnmined,proto3" json:"spent_by_unmined,omitempty"`
}

func (m *UTXO) Reset()                    { *m = UTXO{} }
func (m *UTXO) String() string            { return proto.CompactTextString(m) }
func (*UTXO) ProtoMessage()               {}
func (*UTXO) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{53} }

func (m *UTXO) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *UTXO) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *UTXO) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *UTXO) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *UTXO) GetMaturity() uint32 {
	if m != nil {
		return m.Maturity
	}
	return 0
}

func (m *UTXO) GetConfirmations() uint32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *UTXO) GetSpentByUnmined() bool {
	if m != nil {
		return m.SpentByUnmined
	}
	return false
}

type AddressUTXO struct {
	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Utxos   []*UTXO `protobuf:"bytes,2,rep,name=utxos" json:"utxos,omitempty"`
}

func (m *AddressUTXO) Reset()                    { *m = AddressUTXO{} }
func (m *AddressUTXO) String() string            { return proto.CompactTextString(m) }
func (*AddressUTXO) ProtoMessage()               {}
func (*AddressUTXO) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{54} }

func (m *AddressUTXO) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressUTXO) GetUtxos() []*UTXO {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type GetUtxoResponse struct {
	AddressUtxos []*AddressUTXO `protobuf:"bytes,1,rep,name=address_utxos,json=addressUtxos" json:"address_utxos,omitempty"`
}

func (m *GetUtxoResponse) Reset()                    { *m = GetUtxoResponse{} }
func (m *GetUtxoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoResponse) ProtoMessage()               {}
func (*GetUtxoResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{55} }

func (m *GetUtxoResponse) GetAddressUtxos() []*AddressUTXO {
	if m != nil {
		return m.AddressUtxos
	}
	return nil
}

type GetAddressBindingRequest struct {
	Addresses []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *GetAddressBindingRequest) Reset()                    { *m = GetAddressBindingRequest{} }
func (m *GetAddressBindingRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressBindingRequest) ProtoMessage()               {}
func (*GetAddressBindingRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{56} }

func (m *GetAddressBindingRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type GetAddressBindingResponse struct {
	Amounts map[string]string `protobuf:"bytes,1,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *GetAddressBindingResponse) Reset()                    { *m = GetAddressBindingResponse{} }
func (m *GetAddressBindingResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAddressBindingResponse) ProtoMessage()               {}
func (*GetAddressBindingResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{57} }

func (m *GetAddressBindingResponse) GetAmounts() map[string]string {
	if m != nil {
		return m.Amounts
	}
	return nil
}

type GetBindingHistoryRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (m *GetBindingHistoryRequest) Reset()                    { *m = GetBindingHistoryRequest{} }
func (m *GetBindingHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBindingHistoryRequest) ProtoMessage()               {}
func (*GetBindingHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{58} }

func (m *GetBindingHistoryRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GetBindingHistoryResponse struct {
	Histories []*GetBindingHistoryResponse_History `protobuf:"bytes,1,rep,name=histories" json:"histories,omitempty"`
}

func (m *GetBindingHistoryResponse) Reset()                    { *m = GetBindingHistoryResponse{} }
func (m *GetBindingHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBindingHistoryResponse) ProtoMessage()               {}
func (*GetBindingHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{59} }

func (m *GetBindingHistoryResponse) GetHistories() []*GetBindingHistoryResponse_History {
	if m != nil {
		return m.Histories
	}
	return nil
}

type GetBindingHistoryResponse_BindingUTXO struct {
	TxId           string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Vout           uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	HolderAddress  string `protobuf:"bytes,3,opt,name=holder_address,json=holderAddress,proto3" json:"holder_address,omitempty"`
	BindingAddress string `protobuf:"bytes,4,opt,name=binding_address,json=bindingAddress,proto3" json:"binding_address,omitempty"`
	Amount         string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *GetBindingHistoryResponse_BindingUTXO) Reset()         { *m = GetBindingHistoryResponse_BindingUTXO{} }
func (m *GetBindingHistoryResponse_BindingUTXO) String() string { return proto.CompactTextString(m) }
func (*GetBindingHistoryResponse_BindingUTXO) ProtoMessage()    {}
func (*GetBindingHistoryResponse_BindingUTXO) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{59, 0}
}

func (m *GetBindingHistoryResponse_BindingUTXO) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetBindingHistoryResponse_BindingUTXO) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *GetBindingHistoryResponse_BindingUTXO) GetHolderAddress() string {
	if m != nil {
		return m.HolderAddress
	}
	return ""
}

func (m *GetBindingHistoryResponse_BindingUTXO) GetBindingAddress() string {
	if m != nil {
		return m.BindingAddress
	}
	return ""
}

func (m *GetBindingHistoryResponse_BindingUTXO) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type GetBindingHistoryResponse_History struct {
	TxId          string                                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Status        uint32                                 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	BlockHeight   uint64                                 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Utxo          *GetBindingHistoryResponse_BindingUTXO `protobuf:"bytes,4,opt,name=utxo" json:"utxo,omitempty"`
	FromAddresses []string                               `protobuf:"bytes,5,rep,name=from_addresses,json=fromAddresses" json:"from_addresses,omitempty"`
}

func (m *GetBindingHistoryResponse_History) Reset()         { *m = GetBindingHistoryResponse_History{} }
func (m *GetBindingHistoryResponse_History) String() string { return proto.CompactTextString(m) }
func (*GetBindingHistoryResponse_History) ProtoMessage()    {}
func (*GetBindingHistoryResponse_History) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{59, 1}
}

func (m *GetBindingHistoryResponse_History) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetBindingHistoryResponse_History) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetBindingHistoryResponse_History) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetBindingHistoryResponse_History) GetUtxo() *GetBindingHistoryResponse_BindingUTXO {
	if m != nil {
		return m.Utxo
	}
	return nil
}

func (m *GetBindingHistoryResponse_History) GetFromAddresses() []string {
	if m != nil {
		return m.FromAddresses
	}
	return nil
}

type CreateBindingTransactionRequest struct {
	Outputs     []*CreateBindingTransactionRequest_Output `protobuf:"bytes,1,rep,name=outputs" json:"outputs,omitempty"`
	FromAddress string                                    `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Fee         string                                    `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (m *CreateBindingTransactionRequest) Reset()         { *m = CreateBindingTransactionRequest{} }
func (m *CreateBindingTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBindingTransactionRequest) ProtoMessage()    {}
func (*CreateBindingTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{60}
}

func (m *CreateBindingTransactionRequest) GetOutputs() []*CreateBindingTransactionRequest_Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *CreateBindingTransactionRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *CreateBindingTransactionRequest) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

type CreateBindingTransactionRequest_Output struct {
	HolderAddress  string `protobuf:"bytes,1,opt,name=holder_address,json=holderAddress,proto3" json:"holder_address,omitempty"`
	BindingAddress string `protobuf:"bytes,2,opt,name=binding_address,json=bindingAddress,proto3" json:"binding_address,omitempty"`
	Amount         string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *CreateBindingTransactionRequest_Output) Reset() {
	*m = CreateBindingTransactionRequest_Output{}
}
func (m *CreateBindingTransactionRequest_Output) String() string { return proto.CompactTextString(m) }
func (*CreateBindingTransactionRequest_Output) ProtoMessage()    {}
func (*CreateBindingTransactionRequest_Output) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{60, 0}
}

func (m *CreateBindingTransactionRequest_Output) GetHolderAddress() string {
	if m != nil {
		return m.HolderAddress
	}
	return ""
}

func (m *CreateBindingTransactionRequest_Output) GetBindingAddress() string {
	if m != nil {
		return m.BindingAddress
	}
	return ""
}

func (m *CreateBindingTransactionRequest_Output) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type GetBestBlockResponse struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (m *GetBestBlockResponse) Reset()                    { *m = GetBestBlockResponse{} }
func (m *GetBestBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBestBlockResponse) ProtoMessage()               {}
func (*GetBestBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{61} }

func (m *GetBestBlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBestBlockResponse) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type GetWalletMnemonicRequest struct {
	WalletId   string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Passphrase string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *GetWalletMnemonicRequest) Reset()                    { *m = GetWalletMnemonicRequest{} }
func (m *GetWalletMnemonicRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWalletMnemonicRequest) ProtoMessage()               {}
func (*GetWalletMnemonicRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{62} }

func (m *GetWalletMnemonicRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetWalletMnemonicRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type GetWalletMnemonicResponse struct {
	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Version  uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *GetWalletMnemonicResponse) Reset()                    { *m = GetWalletMnemonicResponse{} }
func (m *GetWalletMnemonicResponse) String() string            { return proto.CompactTextString(m) }
func (*GetWalletMnemonicResponse) ProtoMessage()               {}
func (*GetWalletMnemonicResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{63} }

func (m *GetWalletMnemonicResponse) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *GetWalletMnemonicResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*GetClientStatusResponse)(nil), "rpcprotobuf.GetClientStatusResponse")
	proto.RegisterType((*GetClientStatusResponsePeerCountInfo)(nil), "rpcprotobuf.GetClientStatusResponse.peerCountInfo")
	proto.RegisterType((*GetClientStatusResponsePeerInfo)(nil), "rpcprotobuf.GetClientStatusResponse.peerInfo")
	proto.RegisterType((*GetClientStatusResponsePeerList)(nil), "rpcprotobuf.GetClientStatusResponse.peerList")
	proto.RegisterType((*QuitClientResponse)(nil), "rpcprotobuf.QuitClientResponse")
	proto.RegisterType((*WalletsResponse)(nil), "rpcprotobuf.WalletsResponse")
	proto.RegisterType((*WalletsResponse_WalletSummary)(nil), "rpcprotobuf.WalletsResponse.WalletSummary")
	proto.RegisterType((*UseWalletRequest)(nil), "rpcprotobuf.UseWalletRequest")
	proto.RegisterType((*UseWalletResponse)(nil), "rpcprotobuf.UseWalletResponse")
	proto.RegisterType((*CreateWalletRequest)(nil), "rpcprotobuf.CreateWalletRequest")
	proto.RegisterType((*CreateWalletResponse)(nil), "rpcprotobuf.CreateWalletResponse")
	proto.RegisterType((*ImportWalletRequest)(nil), "rpcprotobuf.ImportWalletRequest")
	proto.RegisterType((*ImportWalletResponse)(nil), "rpcprotobuf.ImportWalletResponse")
	proto.RegisterType((*ImportMnemonicRequest)(nil), "rpcprotobuf.ImportMnemonicRequest")
	proto.RegisterType((*ExportWalletRequest)(nil), "rpcprotobuf.ExportWalletRequest")
	proto.RegisterType((*ExportWalletResponse)(nil), "rpcprotobuf.ExportWalletResponse")
	proto.RegisterType((*RemoveWalletRequest)(nil), "rpcprotobuf.RemoveWalletRequest")
	proto.RegisterType((*RemoveWalletResponse)(nil), "rpcprotobuf.RemoveWalletResponse")
	proto.RegisterType((*GetAddressBalanceRequest)(nil), "rpcprotobuf.GetAddressBalanceRequest")
	proto.RegisterType((*AddressAndBalance)(nil), "rpcprotobuf.AddressAndBalance")
	proto.RegisterType((*GetAddressBalanceResponse)(nil), "rpcprotobuf.GetAddressBalanceResponse")
	proto.RegisterType((*ValidateAddressRequest)(nil), "rpcprotobuf.ValidateAddressRequest")
	proto.RegisterType((*ValidateAddressResponse)(nil), "rpcprotobuf.ValidateAddressResponse")
	proto.RegisterType((*CreateAddressRequest)(nil), "rpcprotobuf.CreateAddressRequest")
	proto.RegisterType((*CreateAddressResponse)(nil), "rpcprotobuf.CreateAddressResponse")
	proto.RegisterType((*GetAddressesRequest)(nil), "rpcprotobuf.GetAddressesRequest")
	proto.RegisterType((*GetAddressesResponse)(nil), "rpcprotobuf.GetAddressesResponse")
	proto.RegisterType((*GetAddressesResponse_AddressDetail)(nil), "rpcprotobuf.GetAddressesResponse.AddressDetail")
	proto.RegisterType((*GetWalletBalanceRequest)(nil), "rpcprotobuf.GetWalletBalanceRequest")
	proto.RegisterType((*GetWalletBalanceResponse)(nil), "rpcprotobuf.GetWalletBalanceResponse")
	proto.RegisterType((*GetWalletBalanceResponse_Detail)(nil), "rpcprotobuf.GetWalletBalanceResponse.Detail")
	proto.RegisterType((*TxHistoryDetails)(nil), "rpcprotobuf.TxHistoryDetails")
	proto.RegisterType((*TxHistoryDetails_Input)(nil), "rpcprotobuf.TxHistoryDetails.Input")
	proto.RegisterType((*TxHistoryDetails_Output)(nil), "rpcprotobuf.TxHistoryDetails.Output")
	proto.RegisterType((*TxHistoryResponse)(nil), "rpcprotobuf.TxHistoryResponse")
	proto.RegisterType((*TxHistoryRequest)(nil), "rpcprotobuf.TxHistoryRequest")
	proto.RegisterType((*TransactionInput)(nil), "rpcprotobuf.TransactionInput")
	proto.RegisterType((*DecodeRawTransactionRequest)(nil), "rpcprotobuf.DecodeRawTransactionRequest")
	proto.RegisterType((*DecodeRawTransactionResponse)(nil), "rpcprotobuf.DecodeRawTransactionResponse")
	proto.RegisterType((*DecodeRawTransactionResponse_Vin)(nil), "rpcprotobuf.DecodeRawTransactionResponse.Vin")
	proto.RegisterType((*DecodeRawTransactionResponse_Vout)(nil), "rpcprotobuf.DecodeRawTransactionResponse.Vout")
	proto.RegisterType((*CreateRawTransactionRequest)(nil), "rpcprotobuf.CreateRawTransactionRequest")
	proto.RegisterType((*AutoCreateTransactionRequest)(nil), "rpcprotobuf.AutoCreateTransactionRequest")
	proto.RegisterType((*CreateRawTransactionResponse)(nil), "rpcprotobuf.CreateRawTransactionResponse")
	proto.RegisterType((*CreateStakingTransactionRequest)(nil), "rpcprotobuf.CreateStakingTransactionRequest")
	proto.RegisterType((*GetBlockStakingRewardRequest)(nil), "rpcprotobuf.GetBlockStakingRewardRequest")
	proto.RegisterType((*GetBlockStakingRewardResponse)(nil), "rpcprotobuf.GetBlockStakingRewardResponse")
	proto.RegisterType((*GetBlockStakingRewardResponse_RewardDetail)(nil), "rpcprotobuf.GetBlockStakingRewardResponse.RewardDetail")
	proto.RegisterType((*GetStakingHistoryRequest)(nil), "rpcprotobuf.GetStakingHistoryRequest")
	proto.RegisterType((*GetStakingHistoryResponse)(nil), "rpcprotobuf.GetStakingHistoryResponse")
	proto.RegisterType((*GetStakingHistoryResponse_StakingUTXO)(nil), "rpcprotobuf.GetStakingHistoryResponse.StakingUTXO")
	proto.RegisterType((*GetStakingHistoryResponse_Tx)(nil), "rpcprotobuf.GetStakingHistoryResponse.Tx")
	proto.RegisterType((*SendRawTransactionRequest)(nil), "rpcprotobuf.SendRawTransactionRequest")
	proto.RegisterType((*SendRawTransactionResponse)(nil), "rpcprotobuf.SendRawTransactionResponse")
	proto.RegisterType((*GetTransactionFeeRequest)(nil), "rpcprotobuf.GetTransactionFeeRequest")
	proto.RegisterType((*GetTransactionFeeResponse)(nil), "rpcprotobuf.GetTransactionFeeResponse")
	proto.RegisterType((*BlockInfoForTx)(nil), "rpcprotobuf.BlockInfoForTx")
	proto.RegisterType((*Vin)(nil), "rpcprotobuf.Vin")
	proto.RegisterType((*Vin_RedeemDetail)(nil), "rpcprotobuf.Vin.RedeemDetail")
	proto.RegisterType((*Vout)(nil), "rpcprotobuf.Vout")
	proto.RegisterType((*Vout_ScriptDetail)(nil), "rpcprotobuf.Vout.ScriptDetail")
	proto.RegisterType((*GetRawTransactionRequest)(nil), "rpcprotobuf.GetRawTransactionRequest")
	proto.RegisterType((*GetRawTransactionResponse)(nil), "rpcprotobuf.GetRawTransactionResponse")
	proto.RegisterType((*GetTxStatusRequest)(nil), "rpcprotobuf.GetTxStatusRequest")
	proto.RegisterType((*GetTxStatusResponse)(nil), "rpcprotobuf.GetTxStatusResponse")
	proto.RegisterType((*SignRawTransactionRequest)(nil), "rpcprotobuf.SignRawTransactionRequest")
	proto.RegisterType((*SignRawTransactionResponse)(nil), "rpcprotobuf.SignRawTransactionResponse")
	proto.RegisterType((*GetUtxoRequest)(nil), "rpcprotobuf.GetUtxoRequest")
	proto.RegisterType((*UTXO)(nil), "rpcprotobuf.UTXO")
	proto.RegisterType((*AddressUTXO)(nil), "rpcprotobuf.AddressUTXO")
	proto.RegisterType((*GetUtxoResponse)(nil), "rpcprotobuf.GetUtxoResponse")
	proto.RegisterType((*GetAddressBindingRequest)(nil), "rpcprotobuf.GetAddressBindingRequest")
	proto.RegisterType((*GetAddressBindingResponse)(nil), "rpcprotobuf.GetAddressBindingResponse")
	proto.RegisterType((*GetBindingHistoryRequest)(nil), "rpcprotobuf.GetBindingHistoryRequest")
	proto.RegisterType((*GetBindingHistoryResponse)(nil), "rpcprotobuf.GetBindingHistoryResponse")
	proto.RegisterType((*GetBindingHistoryResponse_BindingUTXO)(nil), "rpcprotobuf.GetBindingHistoryResponse.BindingUTXO")
	proto.RegisterType((*GetBindingHistoryResponse_History)(nil), "rpcprotobuf.GetBindingHistoryResponse.History")
	proto.RegisterType((*CreateBindingTransactionRequest)(nil), "rpcprotobuf.CreateBindingTransactionRequest")
	proto.RegisterType((*CreateBindingTransactionRequest_Output)(nil), "rpcprotobuf.CreateBindingTransactionRequest.Output")
	proto.RegisterType((*GetBestBlockResponse)(nil), "rpcprotobuf.GetBestBlockResponse")
	proto.RegisterType((*GetWalletMnemonicRequest)(nil), "rpcprotobuf.GetWalletMnemonicRequest")
	proto.RegisterType((*GetWalletMnemonicResponse)(nil), "rpcprotobuf.GetWalletMnemonicResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiService service

type ApiServiceClient interface {
	GetBestBlock(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error)
	GetBlockStakingReward(ctx context.Context, in *GetBlockStakingRewardRequest, opts ...grpc.CallOption) (*GetBlockStakingRewardResponse, error)
	GetClientStatus(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetClientStatusResponse, error)
	QuitClient(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*QuitClientResponse, error)
	// commands act on a wallet
	Wallets(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*WalletsResponse, error)
	// just create non-poc wallet
	CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error)
	UseWallet(ctx context.Context, in *UseWalletRequest, opts ...grpc.CallOption) (*UseWalletResponse, error)
	ImportWallet(ctx context.Context, in *ImportWalletRequest, opts ...grpc.CallOption) (*ImportWalletResponse, error)
	ImportMnemonic(ctx context.Context, in *ImportMnemonicRequest, opts ...grpc.CallOption) (*ImportWalletResponse, error)
	ExportWallet(ctx context.Context, in *ExportWalletRequest, opts ...grpc.CallOption) (*ExportWalletResponse, error)
	RemoveWallet(ctx context.Context, in *RemoveWalletRequest, opts ...grpc.CallOption) (*RemoveWalletResponse, error)
	GetWalletMnemonic(ctx context.Context, in *GetWalletMnemonicRequest, opts ...grpc.CallOption) (*GetWalletMnemonicResponse, error)
	GetWalletBalance(ctx context.Context, in *GetWalletBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error)
	CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error)
	GetAddresses(ctx context.Context, in *GetAddressesRequest, opts ...grpc.CallOption) (*GetAddressesResponse, error)
	// if addresses not provided, return balances of all addresses
	GetAddressBalance(ctx context.Context, in *GetAddressBalanceRequest, opts ...grpc.CallOption) (*GetAddressBalanceResponse, error)
	ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error)
	// if addresses not provided, return utxos of all addresses
	GetUtxo(ctx context.Context, in *GetUtxoRequest, opts ...grpc.CallOption) (*GetUtxoResponse, error)
	DecodeRawTransaction(ctx context.Context, in *DecodeRawTransactionRequest, opts ...grpc.CallOption) (*DecodeRawTransactionResponse, error)
	CreateRawTransaction(ctx context.Context, in *CreateRawTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
	AutoCreateTransaction(ctx context.Context, in *AutoCreateTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
	SignRawTransaction(ctx context.Context, in *SignRawTransactionRequest, opts ...grpc.CallOption) (*SignRawTransactionResponse, error)
	GetTransactionFee(ctx context.Context, in *GetTransactionFeeRequest, opts ...grpc.CallOption) (*GetTransactionFeeResponse, error)
	SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendRawTransactionResponse, error)
	// get tx from chaindb
	GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error)
	GetTxStatus(ctx context.Context, in *GetTxStatusRequest, opts ...grpc.CallOption) (*GetTxStatusResponse, error)
	CreateStakingTransaction(ctx context.Context, in *CreateStakingTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
	TxHistory(ctx context.Context, in *TxHistoryRequest, opts ...grpc.CallOption) (*TxHistoryResponse, error)
	// query by poc addresses
	GetAddressBinding(ctx context.Context, in *GetAddressBindingRequest, opts ...grpc.CallOption) (*GetAddressBindingResponse, error)
	GetStakingHistory(ctx context.Context, in *GetStakingHistoryRequest, opts ...grpc.CallOption) (*GetStakingHistoryResponse, error)
	GetBindingHistory(ctx context.Context, in *GetBindingHistoryRequest, opts ...grpc.CallOption) (*GetBindingHistoryResponse, error)
	CreateBindingTransaction(ctx context.Context, in *CreateBindingTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) GetBestBlock(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error) {
	out := new(GetBestBlockResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetBestBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockStakingReward(ctx context.Context, in *GetBlockStakingRewardRequest, opts ...grpc.CallOption) (*GetBlockStakingRewardResponse, error) {
	out := new(GetBlockStakingRewardResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetBlockStakingReward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetClientStatus(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetClientStatusResponse, error) {
	out := new(GetClientStatusResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetClientStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) QuitClient(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*QuitClientResponse, error) {
	out := new(QuitClientResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/QuitClient", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Wallets(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*WalletsResponse, error) {
	out := new(WalletsResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/Wallets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error) {
	out := new(CreateWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateWallet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UseWallet(ctx context.Context, in *UseWalletRequest, opts ...grpc.CallOption) (*UseWalletResponse, error) {
	out := new(UseWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/UseWallet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ImportWallet(ctx context.Context, in *ImportWalletRequest, opts ...grpc.CallOption) (*ImportWalletResponse, error) {
	out := new(ImportWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/ImportWallet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ImportMnemonic(ctx context.Context, in *ImportMnemonicRequest, opts ...grpc.CallOption) (*ImportWalletResponse, error) {
	out := new(ImportWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/ImportMnemonic", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExportWallet(ctx context.Context, in *ExportWalletRequest, opts ...grpc.CallOption) (*ExportWalletResponse, error) {
	out := new(ExportWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/ExportWallet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) RemoveWallet(ctx context.Context, in *RemoveWalletRequest, opts ...grpc.CallOption) (*RemoveWalletResponse, error) {
	out := new(RemoveWalletResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/RemoveWallet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetWalletMnemonic(ctx context.Context, in *GetWalletMnemonicRequest, opts ...grpc.CallOption) (*GetWalletMnemonicResponse, error) {
	out := new(GetWalletMnemonicResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetWalletMnemonic", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetWalletBalance(ctx context.Context, in *GetWalletBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error) {
	out := new(GetWalletBalanceResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetWalletBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error) {
	out := new(CreateAddressResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAddresses(ctx context.Context, in *GetAddressesRequest, opts ...grpc.CallOption) (*GetAddressesResponse, error) {
	out := new(GetAddressesResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAddresses", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAddressBalance(ctx context.Context, in *GetAddressBalanceRequest, opts ...grpc.CallOption) (*GetAddressBalanceResponse, error) {
	out := new(GetAddressBalanceResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAddressBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error) {
	out := new(ValidateAddressResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/ValidateAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetUtxo(ctx context.Context, in *GetUtxoRequest, opts ...grpc.CallOption) (*GetUtxoResponse, error) {
	out := new(GetUtxoResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetUtxo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) DecodeRawTransaction(ctx context.Context, in *DecodeRawTransactionRequest, opts ...grpc.CallOption) (*DecodeRawTransactionResponse, error) {
	out := new(DecodeRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/DecodeRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateRawTransaction(ctx context.Context, in *CreateRawTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) AutoCreateTransaction(ctx context.Context, in *AutoCreateTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/AutoCreateTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SignRawTransaction(ctx context.Context, in *SignRawTransactionRequest, opts ...grpc.CallOption) (*SignRawTransactionResponse, error) {
	out := new(SignRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/SignRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionFee(ctx context.Context, in *GetTransactionFeeRequest, opts ...grpc.CallOption) (*GetTransactionFeeResponse, error) {
	out := new(GetTransactionFeeResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetTransactionFee", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendRawTransactionResponse, error) {
	out := new(SendRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/SendRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error) {
	out := new(GetRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTxStatus(ctx context.Context, in *GetTxStatusRequest, opts ...grpc.CallOption) (*GetTxStatusResponse, error) {
	out := new(GetTxStatusResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetTxStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateStakingTransaction(ctx context.Context, in *CreateStakingTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateStakingTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) TxHistory(ctx context.Context, in *TxHistoryRequest, opts ...grpc.CallOption) (*TxHistoryResponse, error) {
	out := new(TxHistoryResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/TxHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAddressBinding(ctx context.Context, in *GetAddressBindingRequest, opts ...grpc.CallOption) (*GetAddressBindingResponse, error) {
	out := new(GetAddressBindingResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAddressBinding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetStakingHistory(ctx context.Context, in *GetStakingHistoryRequest, opts ...grpc.CallOption) (*GetStakingHistoryResponse, error) {
	out := new(GetStakingHistoryResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetStakingHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBindingHistory(ctx context.Context, in *GetBindingHistoryRequest, opts ...grpc.CallOption) (*GetBindingHistoryResponse, error) {
	out := new(GetBindingHistoryResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetBindingHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateBindingTransaction(ctx context.Context, in *CreateBindingTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateBindingTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiService service

type ApiServiceServer interface {
	GetBestBlock(context.Context, *google_protobuf2.Empty) (*GetBestBlockResponse, error)
	GetBlockStakingReward(context.Context, *GetBlockStakingRewardRequest) (*GetBlockStakingRewardResponse, error)
	GetClientStatus(context.Context, *google_protobuf2.Empty) (*GetClientStatusResponse, error)
	QuitClient(context.Context, *google_protobuf2.Empty) (*QuitClientResponse, error)
	// commands act on a wallet
	Wallets(context.Context, *google_protobuf2.Empty) (*WalletsResponse, error)
	// just create non-poc wallet
	CreateWallet(context.Context, *CreateWalletRequest) (*CreateWalletResponse, error)
	UseWallet(context.Context, *UseWalletRequest) (*UseWalletResponse, error)
	ImportWallet(context.Context, *ImportWalletRequest) (*ImportWalletResponse, error)
	ImportMnemonic(context.Context, *ImportMnemonicRequest) (*ImportWalletResponse, error)
	ExportWallet(context.Context, *ExportWalletRequest) (*ExportWalletResponse, error)
	RemoveWallet(context.Context, *RemoveWalletRequest) (*RemoveWalletResponse, error)
	GetWalletMnemonic(context.Context, *GetWalletMnemonicRequest) (*GetWalletMnemonicResponse, error)
	GetWalletBalance(context.Context, *GetWalletBalanceRequest) (*GetWalletBalanceResponse, error)
	CreateAddress(context.Context, *CreateAddressRequest) (*CreateAddressResponse, error)
	GetAddresses(context.Context, *GetAddressesRequest) (*GetAddressesResponse, error)
	// if addresses not provided, return balances of all addresses
	GetAddressBalance(context.Context, *GetAddressBalanceRequest) (*GetAddressBalanceResponse, error)
	ValidateAddress(context.Context, *ValidateAddressRequest) (*ValidateAddressResponse, error)
	// if addresses not provided, return utxos of all addresses
	GetUtxo(context.Context, *GetUtxoRequest) (*GetUtxoResponse, error)
	DecodeRawTransaction(context.Context, *DecodeRawTransactionRequest) (*DecodeRawTransactionResponse, error)
	CreateRawTransaction(context.Context, *CreateRawTransactionRequest) (*CreateRawTransactionResponse, error)
	AutoCreateTransaction(context.Context, *AutoCreateTransactionRequest) (*CreateRawTransactionResponse, error)
	SignRawTransaction(context.Context, *SignRawTransactionRequest) (*SignRawTransactionResponse, error)
	GetTransactionFee(context.Context, *GetTransactionFeeRequest) (*GetTransactionFeeResponse, error)
	SendRawTransaction(context.Context, *SendRawTransactionRequest) (*SendRawTransactionResponse, error)
	// get tx from chaindb
	GetRawTransaction(context.Context, *GetRawTransactionRequest) (*GetRawTransactionResponse, error)
	GetTxStatus(context.Context, *GetTxStatusRequest) (*GetTxStatusResponse, error)
	CreateStakingTransaction(context.Context, *CreateStakingTransactionRequest) (*CreateRawTransactionResponse, error)
	TxHistory(context.Context, *TxHistoryRequest) (*TxHistoryResponse, error)
	// query by poc addresses
	GetAddressBinding(context.Context, *GetAddressBindingRequest) (*GetAddressBindingResponse, error)
	GetStakingHistory(context.Context, *GetStakingHistoryRequest) (*GetStakingHistoryResponse, error)
	GetBindingHistory(context.Context, *GetBindingHistoryRequest) (*GetBindingHistoryResponse, error)
	CreateBindingTransaction(context.Context, *CreateBindingTransactionRequest) (*CreateRawTransactionResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_GetBestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetBestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBestBlock(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockStakingReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockStakingRewardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockStakingReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetBlockStakingReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockStakingReward(ctx, req.(*GetBlockStakingRewardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetClientStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetClientStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetClientStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetClientStatus(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_QuitClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).QuitClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/QuitClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).QuitClient(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Wallets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).Wallets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/Wallets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).Wallets(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateWallet(ctx, req.(*CreateWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UseWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UseWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/UseWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UseWallet(ctx, req.(*UseWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ImportWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ImportWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/ImportWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ImportWallet(ctx, req.(*ImportWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ImportMnemonic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportMnemonicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ImportMnemonic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/ImportMnemonic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ImportMnemonic(ctx, req.(*ImportMnemonicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExportWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExportWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/ExportWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExportWallet(ctx, req.(*ExportWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_RemoveWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).RemoveWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/RemoveWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).RemoveWallet(ctx, req.(*RemoveWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetWalletMnemonic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletMnemonicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetWalletMnemonic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetWalletMnemonic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetWalletMnemonic(ctx, req.(*GetWalletMnemonicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetWalletBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetWalletBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetWalletBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetWalletBalance(ctx, req.(*GetWalletBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateAddress(ctx, req.(*CreateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAddresses(ctx, req.(*GetAddressesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAddressBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAddressBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAddressBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAddressBalance(ctx, req.(*GetAddressBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ValidateAddress(ctx, req.(*ValidateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetUtxo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUtxoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetUtxo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetUtxo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetUtxo(ctx, req.(*GetUtxoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_DecodeRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).DecodeRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/DecodeRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).DecodeRawTransaction(ctx, req.(*DecodeRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateRawTransaction(ctx, req.(*CreateRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_AutoCreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutoCreateTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).AutoCreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/AutoCreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).AutoCreateTransaction(ctx, req.(*AutoCreateTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SignRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SignRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/SignRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SignRawTransaction(ctx, req.(*SignRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetTransactionFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionFee(ctx, req.(*GetTransactionFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/SendRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, req.(*SendRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetRawTransaction(ctx, req.(*GetRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTxStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTxStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetTxStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTxStatus(ctx, req.(*GetTxStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateStakingTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStakingTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateStakingTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateStakingTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateStakingTransaction(ctx, req.(*CreateStakingTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_TxHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).TxHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/TxHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).TxHistory(ctx, req.(*TxHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAddressBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressBindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAddressBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAddressBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAddressBinding(ctx, req.(*GetAddressBindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetStakingHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStakingHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetStakingHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetStakingHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetStakingHistory(ctx, req.(*GetStakingHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBindingHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBindingHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBindingHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetBindingHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBindingHistory(ctx, req.(*GetBindingHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateBindingTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBindingTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateBindingTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateBindingTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateBindingTransaction(ctx, req.(*CreateBindingTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcprotobuf.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBestBlock",
			Handler:    _ApiService_GetBestBlock_Handler,
		},
		{
			MethodName: "GetBlockStakingReward",
			Handler:    _ApiService_GetBlockStakingReward_Handler,
		},
		{
			MethodName: "GetClientStatus",
			Handler:    _ApiService_GetClientStatus_Handler,
		},
		{
			MethodName: "QuitClient",
			Handler:    _ApiService_QuitClient_Handler,
		},
		{
			MethodName: "Wallets",
			Handler:    _ApiService_Wallets_Handler,
		},
		{
			MethodName: "CreateWallet",
			Handler:    _ApiService_CreateWallet_Handler,
		},
		{
			MethodName: "UseWallet",
			Handler:    _ApiService_UseWallet_Handler,
		},
		{
			MethodName: "ImportWallet",
			Handler:    _ApiService_ImportWallet_Handler,
		},
		{
			MethodName: "ImportMnemonic",
			Handler:    _ApiService_ImportMnemonic_Handler,
		},
		{
			MethodName: "ExportWallet",
			Handler:    _ApiService_ExportWallet_Handler,
		},
		{
			MethodName: "RemoveWallet",
			Handler:    _ApiService_RemoveWallet_Handler,
		},
		{
			MethodName: "GetWalletMnemonic",
			Handler:    _ApiService_GetWalletMnemonic_Handler,
		},
		{
			MethodName: "GetWalletBalance",
			Handler:    _ApiService_GetWalletBalance_Handler,
		},
		{
			MethodName: "CreateAddress",
			Handler:    _ApiService_CreateAddress_Handler,
		},
		{
			MethodName: "GetAddresses",
			Handler:    _ApiService_GetAddresses_Handler,
		},
		{
			MethodName: "GetAddressBalance",
			Handler:    _ApiService_GetAddressBalance_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _ApiService_ValidateAddress_Handler,
		},
		{
			MethodName: "GetUtxo",
			Handler:    _ApiService_GetUtxo_Handler,
		},
		{
			MethodName: "DecodeRawTransaction",
			Handler:    _ApiService_DecodeRawTransaction_Handler,
		},
		{
			MethodName: "CreateRawTransaction",
			Handler:    _ApiService_CreateRawTransaction_Handler,
		},
		{
			MethodName: "AutoCreateTransaction",
			Handler:    _ApiService_AutoCreateTransaction_Handler,
		},
		{
			MethodName: "SignRawTransaction",
			Handler:    _ApiService_SignRawTransaction_Handler,
		},
		{
			MethodName: "GetTransactionFee",
			Handler:    _ApiService_GetTransactionFee_Handler,
		},
		{
			MethodName: "SendRawTransaction",
			Handler:    _ApiService_SendRawTransaction_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _ApiService_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetTxStatus",
			Handler:    _ApiService_GetTxStatus_Handler,
		},
		{
			MethodName: "CreateStakingTransaction",
			Handler:    _ApiService_CreateStakingTransaction_Handler,
		},
		{
			MethodName: "TxHistory",
			Handler:    _ApiService_TxHistory_Handler,
		},
		{
			MethodName: "GetAddressBinding",
			Handler:    _ApiService_GetAddressBinding_Handler,
		},
		{
			MethodName: "GetStakingHistory",
			Handler:    _ApiService_GetStakingHistory_Handler,
		},
		{
			MethodName: "GetBindingHistory",
			Handler:    _ApiService_GetBindingHistory_Handler,
		},
		{
			MethodName: "CreateBindingTransaction",
			Handler:    _ApiService_CreateBindingTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 4029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x7b, 0xcd, 0x73, 0x1c, 0x49,
	0x56, 0xf8, 0xaf, 0xaa, 0x3f, 0xd4, 0xfd, 0xa4, 0x96, 0xe5, 0x94, 0x6c, 0xcb, 0x65, 0x79, 0xac,
	0x29, 0x8f, 0xc7, 0x1f, 0x61, 0x77, 0x8f, 0x35, 0xeb, 0xfd, 0x2d, 0x9e, 0xe0, 0x43, 0xb2, 0x67,
	0x3c, 0x82, 0xf1, 0x8e, 0x5d, 0x92, 0x67, 0x08, 0x38, 0x74, 0x94, 0xba, 0x53, 0xea, 0x1a, 0x75,
	0x57, 0xb5, 0xab, 0xb2, 0xa5, 0xee, 0x99, 0x70, 0x10, 0xc0, 0x02, 0x87, 0x5d, 0x62, 0x63, 0x17,
	0x02, 0xd8, 0x0d, 0x82, 0x00, 0x22, 0x96, 0x03, 0xfc, 0x01, 0x1c, 0xe0, 0x0e, 0x37, 0x0e, 0x04,
	0x5c, 0x88, 0xe0, 0x00, 0xfc, 0x01, 0xfc, 0x09, 0x44, 0x7e, 0x55, 0x57, 0x66, 0x65, 0xb5, 0xda,
	0xe3, 0x81, 0x93, 0x3a, 0xb3, 0xde, 0xcb, 0xf7, 0xf2, 0x7d, 0xbf, 0xcc, 0x14, 0xd4, 0xfd, 0x61,
	0xd0, 0x1c, 0xc6, 0x11, 0x89, 0xd0, 0x62, 0x3c, 0xec, 0xb0, 0x5f, 0x07, 0xa3, 0x43, 0x67, 0xe3,
	0x28, 0x8a, 0x8e, 0xfa, 0xb8, 0xe5, 0x0f, 0x83, 0x96, 0x1f, 0x86, 0x11, 0xf1, 0x49, 0x10, 0x85,
	0x09, 0x07, 0x75, 0xee, 0xb2, 0x3f, 0x9d, 0x7b, 0x47, 0x38, 0xbc, 0x97, 0x9c, 0xfa, 0x47, 0x47,
	0x38, 0x6e, 0x45, 0x43, 0x06, 0x61, 0x80, 0xbe, 0x22, 0xd6, 0x92, 0x8b, 0xb7, 0xf0, 0x60, 0x48,
	0x26, 0xfc, 0xa3, 0xfb, 0xd7, 0x55, 0xb8, 0xf4, 0x04, 0x93, 0x47, 0xfd, 0x00, 0x87, 0x64, 0x8f,
	0xf8, 0x64, 0x94, 0x78, 0x38, 0x19, 0x46, 0x61, 0x82, 0xd1, 0x0d, 0x58, 0x1e, 0x62, 0x1c, 0xb7,
	0xfb, 0x41, 0x42, 0x70, 0x18, 0x84, 0x47, 0xeb, 0xd6, 0xa6, 0x75, 0xab, 0xe6, 0x35, 0xe8, 0xec,
	0x27, 0x72, 0x12, 0xad, 0xc3, 0x42, 0x32, 0x09, 0x3b, 0xf4, 0xbb, 0xcd, 0xbe, 0xcb, 0x21, 0xba,
	0x0c, 0xb5, 0x4e, 0xcf, 0x0f, 0xc2, 0x76, 0xd0, 0x5d, 0x2f, 0x6d, 0x5a, 0xb7, 0xea, 0xde, 0x02,
	0x1b, 0xef, 0x76, 0xd1, 0x1d, 0x38, 0xdf, 0x8f, 0x3a, 0x7e, 0xbf, 0x7d, 0x80, 0x13, 0xd2, 0xee,
	0xe1, 0xe0, 0xa8, 0x47, 0xd6, 0xcb, 0x9b, 0xd6, 0xad, 0xb2, 0x77, 0x8e, 0x7d, 0xd8, 0xc1, 0x09,
	0xf9, 0x98, 0x4d, 0x53, 0xd8, 0xe3, 0x30, 0x3a, 0x0d, 0x15, 0xd8, 0x0a, 0x87, 0x65, 0x1f, 0x32,
	0xb0, 0x77, 0x01, 0x9d, 0xfa, 0xfd, 0x3e, 0x26, 0x6d, 0xca, 0x84, 0x04, 0xae, 0x32, 0xe0, 0x15,
	0xfe, 0x65, 0x6f, 0x12, 0x76, 0x04, 0xf4, 0x73, 0x00, 0xb6, 0xc3, 0x4e, 0x34, 0x0a, 0xc9, 0xfa,
	0xc2, 0xa6, 0x75, 0x6b, 0x71, 0x6b, 0xab, 0x99, 0x51, 0x44, 0xb3, 0x40, 0x36, 0x4d, 0x8a, 0xf6,
	0x88, 0x62, 0xed, 0x86, 0x87, 0x91, 0x57, 0x4f, 0x87, 0xe8, 0x11, 0x54, 0xe8, 0x20, 0x59, 0xaf,
	0xb1, 0xd5, 0xee, 0xcd, 0xbd, 0x1a, 0x15, 0xa8, 0xc7, 0x71, 0x9d, 0x5f, 0x87, 0x86, 0x42, 0x00,
	0xad, 0x41, 0x85, 0x44, 0xc4, 0xef, 0x33, 0x0d, 0x34, 0x3c, 0x3e, 0x40, 0x0e, 0xd4, 0xa2, 0x11,
	0x39, 0x88, 0x46, 0x61, 0x97, 0x89, 0xbe, 0xe1, 0xa5, 0x63, 0xaa, 0x95, 0x20, 0xe4, 0x9f, 0x4a,
	0xec, 0x93, 0x1c, 0x3a, 0x1e, 0xd4, 0xe8, 0xe2, 0x6c, 0xdd, 0x65, 0xb0, 0x83, 0x2e, 0x5b, 0xb4,
	0xee, 0xd9, 0x01, 0xc3, 0xf2, 0xbb, 0xdd, 0x18, 0x27, 0x09, 0x5b, 0xb0, 0xee, 0xc9, 0x21, 0xda,
	0x80, 0x7a, 0x37, 0x88, 0x71, 0x87, 0x5a, 0x96, 0x50, 0xe6, 0x74, 0xc2, 0xf9, 0x4f, 0x8b, 0x2f,
	0x4a, 0x37, 0x81, 0x76, 0x33, 0x6c, 0x59, 0x9b, 0xa5, 0xd7, 0x92, 0x02, 0x13, 0xe7, 0x74, 0x17,
	0x4f, 0xa6, 0xbb, 0xb0, 0xbf, 0xce, 0x4a, 0x12, 0x9b, 0xaa, 0x25, 0x22, 0x3d, 0x1c, 0xaf, 0x97,
	0xbe, 0xce, 0x32, 0x1c, 0xd7, 0x7d, 0x08, 0xe8, 0xf9, 0x28, 0x10, 0xb0, 0xa9, 0x9b, 0x20, 0x28,
	0x77, 0xa2, 0x2e, 0x66, 0x52, 0x2c, 0x79, 0xec, 0x37, 0x5a, 0x81, 0xd2, 0x20, 0x39, 0x12, 0x32,
	0xa4, 0x3f, 0xdd, 0xdf, 0xb1, 0xe1, 0xdc, 0xe7, 0xcc, 0xfe, 0xa6, 0x0e, 0xf6, 0x18, 0x16, 0xb8,
	0x49, 0x26, 0x42, 0x4e, 0x77, 0x14, 0xb6, 0x34, 0x70, 0x31, 0xde, 0x1b, 0x0d, 0x06, 0x7e, 0x3c,
	0xf1, 0x24, 0xaa, 0xf3, 0x37, 0x16, 0x34, 0x94, 0x4f, 0xe8, 0x0a, 0xd4, 0x85, 0x13, 0xa4, 0xca,
	0xad, 0xf1, 0x89, 0xdd, 0x2e, 0x65, 0x97, 0x4c, 0x86, 0x58, 0x18, 0x0c, 0xfb, 0x4d, 0xd5, 0x7e,
	0x82, 0xe3, 0x44, 0xaa, 0xb6, 0xe1, 0xc9, 0x21, 0xfd, 0x12, 0xe3, 0x81, 0x1f, 0x1f, 0x27, 0xcc,
	0x3b, 0xeb, 0x9e, 0x1c, 0xa2, 0x8b, 0x50, 0x4d, 0x98, 0xb8, 0x98, 0x2b, 0x36, 0x3c, 0x31, 0x42,
	0x57, 0x01, 0xf8, 0xaf, 0x36, 0x95, 0x40, 0x95, 0x5b, 0x0a, 0x9f, 0x79, 0x9a, 0x1c, 0xb9, 0x2d,
	0x58, 0x79, 0x91, 0x60, 0xce, 0xaf, 0x87, 0x5f, 0x8e, 0x70, 0x42, 0x66, 0xf2, 0xeb, 0xfe, 0xa1,
	0x0d, 0xe7, 0x33, 0x18, 0x42, 0x74, 0xd9, 0xd0, 0x62, 0xa9, 0xa1, 0x45, 0x59, 0xcd, 0x2e, 0xd8,
	0x7d, 0xc9, 0xbc, 0xfb, 0xb2, 0xba, 0xfb, 0xeb, 0xd0, 0x60, 0x9e, 0xd6, 0x3e, 0xf0, 0xfb, 0x7e,
	0xd8, 0xc1, 0x6c, 0xab, 0x75, 0x6f, 0x89, 0x4d, 0xee, 0xf0, 0x39, 0x1a, 0x72, 0xf0, 0x98, 0xe0,
	0x38, 0xf4, 0xfb, 0xed, 0x63, 0x3c, 0x11, 0xc1, 0x84, 0x6e, 0xbc, 0xe2, 0xad, 0xc8, 0x2f, 0xbf,
	0x82, 0x27, 0x3c, 0x3e, 0xdc, 0x05, 0x14, 0x84, 0x39, 0xe8, 0x05, 0x0e, 0x2d, 0xbf, 0xa4, 0xd0,
	0x19, 0xf1, 0xd7, 0x14, 0xf1, 0xbb, 0x5f, 0xc0, 0xea, 0xa3, 0x18, 0xfb, 0x44, 0x13, 0xe5, 0x5b,
	0x00, 0x43, 0x3f, 0x49, 0x86, 0xbd, 0xd8, 0x4f, 0xb0, 0x90, 0x4c, 0x66, 0x26, 0xbb, 0xa0, 0xad,
	0xea, 0xf3, 0x32, 0xd4, 0x0e, 0x02, 0xd2, 0x4e, 0x82, 0x2f, 0xb9, 0x74, 0x2a, 0xde, 0xc2, 0x41,
	0x40, 0xf6, 0x82, 0x2f, 0xb1, 0x1b, 0xc0, 0x9a, 0x4a, 0x4b, 0x28, 0x61, 0xa6, 0x9d, 0x39, 0x50,
	0x1b, 0x84, 0x78, 0x10, 0x85, 0x41, 0x47, 0x6a, 0x41, 0x8e, 0x8b, 0xed, 0xcd, 0x7d, 0x0e, 0xab,
	0xbb, 0x83, 0x61, 0x14, 0x13, 0x75, 0x5b, 0x0e, 0xd4, 0x8e, 0xf1, 0x24, 0x21, 0x51, 0x2c, 0x37,
	0x95, 0x8e, 0xb5, 0x2d, 0xdb, 0xfa, 0x96, 0xdd, 0xef, 0x5b, 0xb0, 0xa6, 0xae, 0x29, 0xd8, 0x5f,
	0x06, 0x3b, 0x3a, 0x16, 0x39, 0xcd, 0x8e, 0x8e, 0xbf, 0x49, 0xc3, 0xc9, 0x88, 0xb9, 0xa2, 0xea,
	0xed, 0xef, 0x2c, 0xb8, 0xc0, 0xb9, 0x79, 0x2a, 0xa4, 0x91, 0xd9, 0x63, 0x2a, 0x30, 0x4b, 0x13,
	0xd8, 0x19, 0x7b, 0xcc, 0xd2, 0x2b, 0xa9, 0x6a, 0xbd, 0x01, 0xcb, 0xa9, 0x75, 0x06, 0x61, 0x17,
	0x8f, 0x05, 0xab, 0x0d, 0x39, 0xbb, 0x4b, 0x27, 0x29, 0x58, 0x6a, 0x96, 0x1c, 0x8c, 0x7b, 0x75,
	0x43, 0xce, 0x32, 0x30, 0xd7, 0x83, 0xd5, 0x0f, 0xc7, 0x79, 0xf5, 0xcc, 0x34, 0x84, 0xb3, 0xf4,
	0xb3, 0x05, 0x6b, 0xea, 0x9a, 0x42, 0x3d, 0x33, 0x74, 0x4e, 0xf9, 0xf0, 0xf0, 0x20, 0x3a, 0xc1,
	0xdf, 0x20, 0x1f, 0xef, 0xc2, 0x9a, 0xba, 0xa6, 0xd9, 0x4c, 0xdc, 0x08, 0xd6, 0x9f, 0x60, 0xb2,
	0xcd, 0xf3, 0xa2, 0x08, 0x02, 0x92, 0x81, 0x07, 0x70, 0x31, 0xc6, 0x2f, 0x47, 0x41, 0x8c, 0xbb,
	0xed, 0x4e, 0x14, 0x1e, 0x06, 0xf1, 0x80, 0xd7, 0x62, 0x0c, 0xbf, 0xe2, 0x5d, 0x90, 0x5f, 0x1f,
	0x65, 0x3f, 0xd2, 0xe4, 0x2a, 0xf2, 0x2c, 0x4e, 0x58, 0xa2, 0xab, 0x7b, 0xd3, 0x09, 0xf7, 0x1f,
	0x2c, 0x38, 0x2f, 0xc8, 0x6d, 0x87, 0x5d, 0x19, 0x76, 0x32, 0xa9, 0xda, 0x52, 0x53, 0x75, 0x5a,
	0x2c, 0xf0, 0x3d, 0x8a, 0x62, 0x61, 0x03, 0xea, 0xc9, 0x10, 0x87, 0x5d, 0xff, 0xa0, 0x8f, 0x65,
	0x02, 0x4f, 0x27, 0xd0, 0x7d, 0x58, 0x3b, 0x0d, 0x48, 0xaf, 0x1b, 0xfb, 0xa7, 0x74, 0xdc, 0x4e,
	0x88, 0x7f, 0x4c, 0x2b, 0x3a, 0x1e, 0xf4, 0x57, 0xb3, 0xdf, 0xf6, 0xf8, 0xa7, 0x1c, 0xca, 0x41,
	0x10, 0x76, 0x29, 0x4a, 0x25, 0x8f, 0xb2, 0xc3, 0x3f, 0xb9, 0x9f, 0xc3, 0x65, 0x83, 0xe8, 0x84,
	0x9c, 0x1f, 0x42, 0x4d, 0x84, 0x59, 0x99, 0x0e, 0xdf, 0x52, 0xd2, 0x61, 0x4e, 0x04, 0x5e, 0x0a,
	0xef, 0x6e, 0xc1, 0xc5, 0xcf, 0xfc, 0x7e, 0xd0, 0xf5, 0x09, 0x16, 0x60, 0x52, 0x23, 0x85, 0x62,
	0x72, 0x7f, 0xd3, 0x82, 0x4b, 0x39, 0xa4, 0x69, 0x7a, 0x09, 0x92, 0xf6, 0x09, 0xfd, 0x2a, 0x34,
	0xbf, 0x10, 0x24, 0x0c, 0x18, 0x5d, 0x82, 0x85, 0x20, 0x69, 0x0f, 0x82, 0x10, 0x8b, 0x72, 0xb7,
	0x1a, 0x24, 0x4f, 0x83, 0x50, 0x51, 0x48, 0x49, 0x55, 0x88, 0x16, 0x27, 0x2a, 0xd3, 0x70, 0xf7,
	0x9e, 0x8c, 0xac, 0x79, 0xae, 0x25, 0x86, 0xa5, 0x62, 0xdc, 0x87, 0x0b, 0x1a, 0x86, 0x60, 0xb9,
	0x78, 0xa3, 0x2d, 0x58, 0x9d, 0x4a, 0x1d, 0xcf, 0x41, 0xe3, 0xdf, 0x2c, 0x58, 0x53, 0x31, 0x04,
	0x8d, 0x5d, 0x58, 0xe8, 0x62, 0xe2, 0x07, 0x7d, 0xa9, 0xa1, 0x96, 0x5e, 0x47, 0xe5, 0x70, 0xa4,
	0xda, 0x1e, 0x33, 0x3c, 0x4f, 0xe2, 0x3b, 0x63, 0x68, 0x28, 0x5f, 0x66, 0xd8, 0x73, 0x86, 0x51,
	0x5b, 0x61, 0x94, 0x06, 0xe5, 0x51, 0x82, 0x79, 0x85, 0x5b, 0xf3, 0xd8, 0x6f, 0x74, 0x0d, 0x16,
	0x13, 0xd2, 0x6d, 0xcb, 0xb5, 0xb8, 0x01, 0x43, 0x42, 0xba, 0x82, 0x9c, 0xdb, 0x63, 0x1d, 0x0f,
	0x77, 0xf2, 0x6f, 0xc6, 0x7d, 0x2f, 0x42, 0x95, 0x6f, 0x4b, 0x5a, 0x04, 0x1f, 0xb9, 0x7f, 0x69,
	0xb3, 0x50, 0xa1, 0x91, 0x9a, 0x27, 0x79, 0x9a, 0x5d, 0xf8, 0x71, 0x4a, 0xa7, 0xc4, 0x9a, 0x8b,
	0xbb, 0xba, 0xf4, 0x8d, 0x94, 0x9a, 0x42, 0xf4, 0x02, 0xd7, 0xf9, 0x81, 0x05, 0x55, 0x21, 0x73,
	0x25, 0x26, 0x58, 0xf3, 0xc6, 0x04, 0xfb, 0xf5, 0x63, 0x42, 0xa9, 0x38, 0x26, 0xfc, 0xbb, 0x0d,
	0x2b, 0xfb, 0xe3, 0x8f, 0x03, 0x1a, 0xd8, 0x27, 0x9c, 0xaf, 0x04, 0xad, 0x42, 0x85, 0x8c, 0xa7,
	0x82, 0x29, 0x93, 0xf1, 0x6e, 0x17, 0xbd, 0x0d, 0x4b, 0x07, 0xfd, 0xa8, 0x73, 0x2c, 0xbb, 0x3a,
	0x9b, 0x75, 0x75, 0x8b, 0x6c, 0x4e, 0x34, 0x74, 0x1f, 0x40, 0x35, 0x08, 0x87, 0x23, 0x92, 0x88,
	0x3a, 0xff, 0xba, 0x22, 0x21, 0x9d, 0x4c, 0x73, 0x97, 0xc2, 0x7a, 0x02, 0x05, 0xfd, 0x02, 0x2c,
	0x44, 0x23, 0xc2, 0xb0, 0xcb, 0x0c, 0xfb, 0x9d, 0xd9, 0xd8, 0x9f, 0x32, 0x60, 0x4f, 0x22, 0xd1,
	0x1c, 0x7a, 0x18, 0x47, 0x83, 0xf6, 0x34, 0x94, 0x57, 0x58, 0x28, 0x6f, 0xd0, 0xd9, 0xd4, 0x31,
	0x9c, 0x2d, 0xa8, 0x30, 0xba, 0xe6, 0x4d, 0xae, 0x41, 0x85, 0xe7, 0x5f, 0x9b, 0xb5, 0x13, 0x7c,
	0xe0, 0x3c, 0x84, 0x2a, 0xa7, 0x36, 0xc3, 0x4d, 0x2e, 0x42, 0xd5, 0x1f, 0xb0, 0x6a, 0x92, 0x2b,
	0x48, 0x8c, 0xdc, 0x67, 0x70, 0x3e, 0x65, 0x3d, 0xb5, 0xbe, 0x0f, 0xa0, 0xde, 0x63, 0x53, 0x41,
	0x1a, 0x6d, 0xaf, 0xce, 0xdc, 0xad, 0x37, 0x85, 0x77, 0x77, 0x32, 0x1a, 0x93, 0xae, 0xb3, 0x06,
	0x15, 0x5e, 0xca, 0x8a, 0x0e, 0xb5, 0x23, 0xeb, 0x57, 0x73, 0x3f, 0xe9, 0x7e, 0x00, 0x2b, 0xfb,
	0xb1, 0x1f, 0x26, 0x3e, 0x6b, 0x20, 0x67, 0x08, 0x04, 0x41, 0xf9, 0x24, 0x1a, 0x11, 0xd9, 0xaf,
	0xd0, 0xdf, 0x6e, 0x0b, 0xae, 0x3c, 0xc6, 0xb4, 0xd1, 0xf2, 0xfc, 0xd3, 0xcc, 0x2a, 0x92, 0x97,
	0x15, 0x28, 0xf5, 0xf0, 0x58, 0xac, 0x42, 0x7f, 0xba, 0x7f, 0x5e, 0x86, 0x0d, 0x33, 0x86, 0x90,
	0x87, 0x91, 0x74, 0x71, 0xe0, 0xb9, 0x02, 0x75, 0x66, 0x89, 0x24, 0x18, 0xf0, 0x64, 0x5a, 0xf2,
	0x6a, 0x74, 0x62, 0x3f, 0x18, 0xb0, 0x86, 0x90, 0x55, 0xd1, 0x3c, 0xd6, 0xb3, 0xdf, 0xe8, 0x17,
	0xa1, 0x74, 0x12, 0x84, 0xcc, 0x20, 0xf4, 0xee, 0x73, 0x16, 0x5f, 0xcd, 0xcf, 0x82, 0xd0, 0xa3,
	0x98, 0x68, 0x47, 0x88, 0xa1, 0xca, 0x56, 0x68, 0xbe, 0xc6, 0x0a, 0xd1, 0x88, 0x70, 0xb1, 0xd1,
	0xfd, 0x0c, 0xfd, 0x49, 0x3f, 0xf2, 0xbb, 0xac, 0xe1, 0xa8, 0x7b, 0x72, 0xe8, 0x74, 0xa1, 0xf4,
	0x59, 0x10, 0xce, 0xad, 0x00, 0x5a, 0x9b, 0x25, 0x54, 0xd8, 0xb4, 0x27, 0x2a, 0x31, 0x37, 0x4c,
	0xc7, 0x94, 0xca, 0x69, 0x40, 0x42, 0x1e, 0x7c, 0xa9, 0xfd, 0xcb, 0xa1, 0xf3, 0x53, 0x0b, 0xca,
	0x94, 0x1d, 0x6a, 0x2c, 0x27, 0x7e, 0x7f, 0x24, 0x63, 0x0e, 0x1f, 0xa0, 0x25, 0xb0, 0x42, 0x41,
	0xc5, 0x0a, 0x8d, 0x05, 0x37, 0xed, 0x2d, 0x3b, 0x71, 0x30, 0x24, 0x6d, 0x3f, 0x19, 0x88, 0xd0,
	0x5e, 0xe7, 0x33, 0xdb, 0xc9, 0x20, 0xf3, 0xb9, 0x27, 0x0a, 0xd8, 0xf4, 0xf3, 0xc7, 0x78, 0xac,
	0x56, 0x59, 0x55, 0xbd, 0xca, 0xfa, 0x27, 0x1b, 0xae, 0xf0, 0xcc, 0x6a, 0x36, 0xaa, 0x07, 0x69,
	0x68, 0x31, 0xba, 0x8b, 0x66, 0xcb, 0x69, 0x50, 0xf9, 0x14, 0x16, 0xb8, 0x1f, 0x26, 0xe2, 0x04,
	0xe3, 0x81, 0x82, 0x37, 0x83, 0x62, 0x73, 0x9b, 0xe3, 0x7d, 0x18, 0x12, 0xda, 0xee, 0x8b, 0x55,
	0xf2, 0xa6, 0x57, 0xce, 0x98, 0xde, 0x0d, 0x58, 0xee, 0xf4, 0xfc, 0xf0, 0x08, 0x6b, 0xf9, 0xaf,
	0xc1, 0x67, 0x45, 0x10, 0x42, 0xb7, 0xe0, 0x5c, 0x32, 0x3a, 0x20, 0xb1, 0xdf, 0x21, 0x87, 0x18,
	0xd3, 0xf0, 0x24, 0x42, 0x95, 0x3e, 0xed, 0x3c, 0x84, 0xa5, 0x2c, 0x1b, 0xd4, 0xb5, 0x8e, 0xf1,
	0x44, 0xba, 0xd6, 0x31, 0x9e, 0x4c, 0x75, 0x69, 0x67, 0x74, 0xf9, 0xd0, 0xfe, 0x8e, 0xe5, 0xfe,
	0xcc, 0x86, 0x8d, 0xed, 0x11, 0x89, 0xf8, 0x1e, 0x0d, 0x22, 0x7d, 0x36, 0x95, 0x0d, 0x97, 0xe9,
	0xb7, 0xd5, 0x82, 0x6f, 0x06, 0xee, 0x3c, 0xc2, 0xb1, 0x35, 0xe1, 0xac, 0x40, 0xe9, 0x10, 0xcb,
	0xda, 0x97, 0xfe, 0xa4, 0x19, 0x25, 0x1b, 0xb1, 0x85, 0xb0, 0x16, 0x33, 0xf1, 0xda, 0x20, 0xd1,
	0x8a, 0x41, 0xa2, 0x6f, 0x24, 0xa7, 0xf7, 0x60, 0xc3, 0x6c, 0x06, 0x22, 0x36, 0xe5, 0xc3, 0xd9,
	0xdf, 0x5b, 0x70, 0x8d, 0xa3, 0x88, 0xc4, 0x6b, 0x10, 0xae, 0xbe, 0x37, 0x2b, 0xbf, 0xb7, 0x9b,
	0x70, 0x4e, 0xe4, 0xf4, 0xb6, 0x1a, 0xa5, 0x97, 0xc5, 0xf4, 0x76, 0x2e, 0xb5, 0x94, 0xb2, 0xa9,
	0x05, 0x5d, 0x07, 0x9a, 0xdb, 0xbe, 0xc4, 0x61, 0x7b, 0x88, 0xe3, 0x20, 0xea, 0x8a, 0xde, 0x72,
	0x89, 0x4f, 0x3e, 0x63, 0x73, 0x52, 0xec, 0x95, 0x54, 0xec, 0xee, 0xb7, 0x61, 0xe3, 0x09, 0x26,
	0x3b, 0x54, 0x31, 0x82, 0x7f, 0x0f, 0x9f, 0xfa, 0x71, 0x57, 0xb2, 0x7e, 0x11, 0xaa, 0x22, 0xc5,
	0x5b, 0x4c, 0x85, 0x62, 0xe4, 0xfe, 0xc8, 0x86, 0xab, 0x05, 0x88, 0x42, 0x54, 0xcf, 0xf5, 0x02,
	0xf5, 0xff, 0xeb, 0x25, 0x52, 0x31, 0x72, 0x93, 0x0f, 0xb5, 0x42, 0x35, 0xc3, 0x8c, 0x9d, 0x65,
	0xc6, 0xf9, 0x9e, 0x05, 0x4b, 0x59, 0x0c, 0x1a, 0xb0, 0x62, 0x3f, 0x3c, 0x16, 0xa5, 0x22, 0xfb,
	0x5d, 0x94, 0x93, 0xe9, 0xfc, 0x29, 0x5f, 0x94, 0x0a, 0xd4, 0xf2, 0xc4, 0x28, 0x9b, 0x2f, 0xcb,
	0xb9, 0xec, 0x3e, 0x8c, 0xa3, 0xc3, 0x80, 0x08, 0x41, 0x8a, 0x91, 0xdb, 0x64, 0x25, 0xa6, 0xd8,
	0x90, 0x96, 0x93, 0x65, 0x08, 0x95, 0xd1, 0x7c, 0x32, 0xc4, 0xee, 0x8f, 0xcb, 0xac, 0x07, 0xd3,
	0x11, 0xd2, 0xb2, 0xa0, 0x44, 0xc6, 0x52, 0x76, 0xb7, 0x75, 0xd9, 0x99, 0x91, 0x9a, 0xfb, 0x63,
	0x8f, 0x62, 0xa1, 0xa7, 0xb0, 0xc0, 0xb7, 0x21, 0x43, 0xdd, 0xfb, 0x73, 0x2e, 0xf0, 0x39, 0xc7,
	0x12, 0xbe, 0x2c, 0xd6, 0x70, 0x7e, 0xdf, 0x82, 0x45, 0x81, 0xf0, 0x62, 0xff, 0x57, 0x3f, 0x9d,
	0x3f, 0x39, 0x15, 0x37, 0x62, 0x53, 0x75, 0x94, 0x67, 0xdb, 0x71, 0x25, 0x6f, 0xc7, 0xce, 0x9f,
	0x5a, 0x60, 0xef, 0x8f, 0xcd, 0x6c, 0x4c, 0x0f, 0x43, 0x6d, 0xe5, 0x30, 0x54, 0x2f, 0x59, 0x4b,
	0xf9, 0x92, 0xf5, 0x23, 0x28, 0x8f, 0xc8, 0x38, 0x62, 0x1c, 0x19, 0x6e, 0x1f, 0x0a, 0x44, 0x96,
	0x11, 0x8c, 0xc7, 0xf0, 0x69, 0x04, 0xca, 0xca, 0xf1, 0xac, 0x08, 0x64, 0x65, 0x23, 0xd0, 0x3d,
	0xb8, 0xbc, 0x87, 0xc3, 0xee, 0xbc, 0xd5, 0xd4, 0x7d, 0x70, 0x4c, 0xe0, 0x33, 0x4a, 0x29, 0xf7,
	0x27, 0xbc, 0x15, 0xca, 0xc0, 0x7f, 0x84, 0xd3, 0xb6, 0xeb, 0x13, 0x3d, 0x0f, 0xe4, 0xa4, 0x60,
	0xc4, 0xfb, 0x3a, 0x39, 0xe0, 0x81, 0xd6, 0x20, 0xcc, 0x99, 0xc5, 0xaf, 0xc1, 0x62, 0xcf, 0x4f,
	0xd2, 0x76, 0xa6, 0xcc, 0xda, 0x3c, 0xe8, 0xf9, 0x89, 0xe8, 0x62, 0xde, 0x28, 0xfe, 0xdf, 0x63,
	0x1e, 0xa9, 0x6f, 0x71, 0x1a, 0xfc, 0x69, 0xf4, 0xb4, 0xa6, 0xd1, 0x13, 0xc3, 0x32, 0x0b, 0x62,
	0xbb, 0xe1, 0x61, 0xf4, 0x51, 0x14, 0xef, 0x8f, 0x8b, 0xe2, 0x25, 0xad, 0x87, 0x84, 0xf5, 0xf9,
	0x49, 0x4f, 0xd0, 0xad, 0x73, 0xdb, 0xf3, 0x93, 0x1e, 0xad, 0x87, 0xa8, 0x8c, 0x12, 0xe2, 0x0f,
	0x86, 0xa2, 0x88, 0x9d, 0x4e, 0xb8, 0x3f, 0xb4, 0x79, 0x4d, 0xf8, 0x75, 0x6b, 0xb5, 0x1d, 0x68,
	0xc4, 0xb8, 0x8b, 0xf1, 0xa0, 0x2d, 0x7a, 0x56, 0x6e, 0xe0, 0xaa, 0xc0, 0x3f, 0x0b, 0xc2, 0xa6,
	0xc7, 0xa0, 0x44, 0xd8, 0x5d, 0x8a, 0x33, 0x23, 0xe7, 0xfb, 0x2c, 0xc6, 0x4e, 0x27, 0xfe, 0x97,
	0x0b, 0x54, 0xb5, 0x42, 0xac, 0xe8, 0x15, 0xe2, 0x7f, 0xbf, 0x69, 0xf9, 0xfa, 0x08, 0x1a, 0xa2,
	0x3e, 0x55, 0x44, 0xa2, 0x1e, 0x73, 0x51, 0x0a, 0xcd, 0x3d, 0x06, 0x26, 0x65, 0x92, 0x64, 0x46,
	0xce, 0x31, 0x2c, 0x65, 0xbf, 0x52, 0x03, 0xa1, 0xc5, 0xb0, 0x30, 0x10, 0x3f, 0x19, 0x48, 0x87,
	0xb5, 0x53, 0x87, 0x45, 0x97, 0xa1, 0x16, 0xe3, 0x97, 0xed, 0x24, 0x38, 0x4a, 0xe4, 0xd9, 0x7e,
	0x8c, 0x5f, 0xee, 0x05, 0x47, 0xda, 0x96, 0xcb, 0xfa, 0x96, 0x5b, 0xcc, 0x6b, 0xcd, 0x71, 0xc1,
	0xe8, 0xe7, 0x3f, 0x2a, 0x31, 0x63, 0x9e, 0xb7, 0x92, 0x99, 0x2e, 0x62, 0x9b, 0xfb, 0xae, 0xd2,
	0x8c, 0xbe, 0xab, 0xac, 0xf5, 0x5d, 0xf7, 0xa1, 0xc2, 0x8c, 0x9b, 0x45, 0xef, 0xc5, 0xad, 0x2b,
	0x8a, 0x58, 0x55, 0x97, 0xf1, 0x38, 0x24, 0x72, 0x79, 0x5b, 0xc6, 0x9b, 0xaa, 0x15, 0xdd, 0x34,
	0x79, 0xe7, 0x75, 0x43, 0x98, 0xd7, 0x02, 0x03, 0x3a, 0x9f, 0x53, 0x56, 0xbe, 0xb9, 0xaa, 0x29,
	0xcd, 0x15, 0x7a, 0x07, 0x1a, 0xea, 0x61, 0x52, 0x9d, 0x19, 0xa4, 0x3a, 0x99, 0x76, 0x8d, 0x90,
	0xe9, 0x1a, 0x85, 0xf3, 0x2f, 0x4e, 0x2b, 0xd6, 0x69, 0xa2, 0x59, 0x62, 0x70, 0x32, 0xd1, 0x38,
	0x50, 0xeb, 0x44, 0x41, 0x78, 0xe0, 0x27, 0x78, 0xbd, 0xc1, 0xa2, 0x53, 0x3a, 0x76, 0x6f, 0x03,
	0xa2, 0xf1, 0x65, 0x2c, 0x6f, 0x37, 0x67, 0xa8, 0x6f, 0x9b, 0x1d, 0x15, 0x4e, 0x41, 0x0d, 0x57,
	0x9c, 0x15, 0x71, 0xc5, 0xa9, 0xa6, 0xbc, 0xba, 0xe4, 0xc4, 0xed, 0xc1, 0xe5, 0xbd, 0xe0, 0x28,
	0x34, 0xdb, 0xcc, 0x05, 0xa8, 0xc6, 0xfe, 0x69, 0x9b, 0x48, 0x1b, 0xa8, 0xc4, 0xfe, 0xe9, 0xfe,
	0x98, 0x3a, 0xd4, 0x61, 0xdf, 0x3f, 0x92, 0x4b, 0xf1, 0x81, 0x76, 0x60, 0x5f, 0xca, 0x1d, 0xd8,
	0xff, 0x32, 0x38, 0x26, 0x4a, 0x85, 0xb6, 0xc6, 0x64, 0x34, 0x18, 0xf6, 0x31, 0x91, 0x47, 0xb7,
	0xe9, 0xd8, 0x6d, 0xc2, 0xf2, 0x13, 0x4c, 0x5e, 0x90, 0x71, 0x24, 0x59, 0x55, 0x1c, 0xc3, 0xd2,
	0x1d, 0xe3, 0x5f, 0x2d, 0x28, 0xbf, 0x5e, 0x55, 0x52, 0x54, 0x43, 0xeb, 0x25, 0x42, 0x39, 0x5f,
	0x22, 0x38, 0x50, 0x1b, 0xf8, 0x64, 0x14, 0x07, 0x64, 0x22, 0x2a, 0x93, 0x74, 0x9c, 0x37, 0xae,
	0x2a, 0xbf, 0xb7, 0x51, 0x8d, 0xeb, 0x16, 0xac, 0x24, 0x43, 0x1c, 0x92, 0xf6, 0xc1, 0xa4, 0x3d,
	0x0a, 0x07, 0x41, 0x88, 0xf9, 0x11, 0x40, 0xcd, 0x5b, 0x66, 0xf3, 0x3b, 0x93, 0x17, 0x7c, 0xd6,
	0x7d, 0x06, 0x8b, 0xa2, 0xea, 0x67, 0xdb, 0x2b, 0x3e, 0x6e, 0xba, 0x09, 0x15, 0x5a, 0x77, 0xc8,
	0x5a, 0x4f, 0xf5, 0x0b, 0x56, 0x97, 0xf0, 0xef, 0xee, 0x33, 0x38, 0x97, 0x8a, 0x56, 0xe8, 0xe6,
	0xe7, 0xa1, 0x21, 0x96, 0x69, 0xf3, 0x35, 0x78, 0xda, 0x5f, 0x37, 0x9d, 0xf7, 0xb3, 0xa5, 0x96,
	0x04, 0xf8, 0x0b, 0xb6, 0xe2, 0x77, 0x94, 0x1b, 0x18, 0x9e, 0x81, 0xe7, 0x53, 0xdb, 0x5f, 0x59,
	0xca, 0x0d, 0x84, 0x44, 0x15, 0x6c, 0x3d, 0xd5, 0xeb, 0x90, 0xf7, 0x0b, 0x8e, 0xb7, 0x35, 0x44,
	0x73, 0x21, 0xf2, 0x46, 0x35, 0x01, 0x2f, 0xeb, 0x05, 0x9d, 0x39, 0xca, 0xfa, 0x7f, 0xe1, 0x71,
	0x57, 0x47, 0x10, 0x1b, 0xfb, 0x24, 0x7f, 0xda, 0xd7, 0xcc, 0x35, 0x46, 0x46, 0xd4, 0xa6, 0x1c,
	0x4f, 0x17, 0x70, 0xfe, 0xcc, 0x82, 0x45, 0x01, 0xfd, 0x7a, 0x2e, 0x70, 0x03, 0x96, 0x7b, 0x51,
	0xbf, 0x8b, 0xe3, 0xb6, 0x5a, 0x9f, 0x37, 0xf8, 0x6c, 0xa6, 0x2d, 0x15, 0x85, 0x96, 0xd6, 0x98,
	0x2f, 0x8b, 0xe9, 0x7c, 0x5b, 0x5a, 0xc9, 0xba, 0x94, 0xf3, 0x8f, 0x16, 0x2c, 0x08, 0xbe, 0xff,
	0xaf, 0xcb, 0xf5, 0x02, 0x29, 0x66, 0xc4, 0xc5, 0xcb, 0xf5, 0x39, 0x0f, 0x8b, 0xdd, 0x3f, 0xb6,
	0x65, 0xa7, 0x2f, 0x96, 0x30, 0x04, 0xd5, 0xa7, 0xd3, 0x73, 0x6b, 0x93, 0xd9, 0x9e, 0x81, 0x9e,
	0x3b, 0xc6, 0xd6, 0x0f, 0x0e, 0xec, 0xfc, 0xc1, 0x41, 0xee, 0x24, 0xc5, 0x19, 0xa6, 0x07, 0xd4,
	0x79, 0x25, 0x5b, 0x73, 0x2a, 0xd9, 0x3e, 0x43, 0xc9, 0x4a, 0xdc, 0x74, 0x3f, 0x62, 0x77, 0x54,
	0x3b, 0x38, 0xe1, 0x2d, 0x7d, 0x6a, 0xeb, 0x45, 0xc5, 0xf0, 0x45, 0xa8, 0x12, 0x3f, 0x3e, 0xc2,
	0x69, 0x2b, 0xce, 0x47, 0xee, 0xe7, 0x99, 0x3b, 0x1a, 0xfd, 0x4a, 0xfe, 0x8d, 0xee, 0x93, 0x9f,
	0x33, 0x8f, 0xd4, 0x17, 0x9e, 0x5e, 0x6e, 0x17, 0x5e, 0xf6, 0x6b, 0xc7, 0xce, 0xd3, 0x67, 0x05,
	0x5b, 0xff, 0xb1, 0x09, 0xb0, 0x3d, 0x0c, 0xf6, 0x70, 0x7c, 0x12, 0x74, 0x30, 0x3a, 0x80, 0xa5,
	0xac, 0x08, 0xd0, 0xc5, 0x26, 0x7f, 0xea, 0xd7, 0x4c, 0x75, 0xff, 0xe1, 0x60, 0x48, 0x26, 0xce,
	0xdb, 0x39, 0x2b, 0xd5, 0xa5, 0xe6, 0x5e, 0xfa, 0xad, 0x7f, 0xfe, 0xaf, 0x3f, 0xb0, 0xcf, 0xa3,
	0x73, 0xad, 0x93, 0xfb, 0x2d, 0x66, 0xef, 0x49, 0xeb, 0x80, 0x8a, 0xe0, 0x27, 0x16, 0x5c, 0x30,
	0x1e, 0x9b, 0xa0, 0xdb, 0xf3, 0x1c, 0xad, 0x30, 0x39, 0x3a, 0x77, 0xe6, 0x3f, 0x85, 0x71, 0x6f,
	0x33, 0x4e, 0xae, 0xa3, 0xb7, 0x33, 0x9c, 0x7c, 0xc5, 0x75, 0xf8, 0xaa, 0x25, 0xce, 0xa5, 0x62,
	0xce, 0xc1, 0x17, 0x2c, 0xb3, 0x64, 0x9f, 0x6e, 0x15, 0x8a, 0xe0, 0x9d, 0x79, 0x1e, 0x7c, 0xb9,
	0x97, 0x19, 0xed, 0x55, 0x74, 0x9e, 0xd2, 0xee, 0x30, 0x88, 0x96, 0x08, 0x0d, 0x3e, 0xc0, 0xf4,
	0xed, 0x57, 0x21, 0x99, 0x6b, 0x0a, 0x99, 0xfc, 0x63, 0x31, 0xd7, 0x61, 0x14, 0xd6, 0xdc, 0x73,
	0x19, 0x0a, 0x2f, 0x47, 0x01, 0x79, 0x68, 0xdd, 0x41, 0xfb, 0xb0, 0x20, 0x9e, 0x7c, 0x15, 0xae,
	0xbf, 0x31, 0xeb, 0x81, 0x98, 0xbb, 0xca, 0x16, 0x6f, 0xa0, 0x45, 0xba, 0xb8, 0x78, 0x1e, 0x86,
	0x62, 0x58, 0xca, 0x3e, 0xde, 0x41, 0x9b, 0x86, 0xe0, 0xa0, 0xbc, 0xa2, 0xd0, 0xcc, 0xc5, 0xf4,
	0xf2, 0xc7, 0xbd, 0xca, 0x28, 0x5d, 0x72, 0x51, 0x86, 0x52, 0xab, 0xc3, 0x20, 0xe9, 0x4e, 0x0e,
	0xa1, 0x9e, 0x3e, 0xd9, 0x42, 0x6a, 0xc7, 0xa7, 0x3f, 0xfe, 0x72, 0xde, 0x2a, 0xfa, 0x6c, 0x92,
	0x98, 0x24, 0x35, 0x4a, 0x18, 0x9d, 0x18, 0x96, 0xb2, 0x2f, 0x7b, 0xb4, 0xbd, 0x19, 0x1e, 0x12,
	0x69, 0x7b, 0x33, 0x3d, 0x0b, 0x32, 0xef, 0x2d, 0x60, 0x90, 0x94, 0xe6, 0x6f, 0xc0, 0xb2, 0xfa,
	0x7e, 0x07, 0xb9, 0x86, 0x35, 0xb5, 0x48, 0x32, 0x0f, 0xdd, 0x77, 0x19, 0xdd, 0x4d, 0xf7, 0x4a,
	0x9e, 0x6e, 0x4b, 0xc6, 0x06, 0xb1, 0xe9, 0xec, 0x7b, 0x19, 0x6d, 0xd3, 0x86, 0xe7, 0x39, 0x1a,
	0x71, 0xd3, 0x63, 0x1b, 0xf3, 0xa6, 0xf1, 0x58, 0x6e, 0x3a, 0xa6, 0x7d, 0xf8, 0xf4, 0x6d, 0x8c,
	0x46, 0xd3, 0xf0, 0x14, 0x47, 0xa3, 0x69, 0x7a, 0x58, 0x63, 0xa6, 0x19, 0x33, 0x48, 0x4a, 0xf3,
	0xb7, 0x2d, 0x38, 0x9f, 0x0b, 0xa0, 0xe8, 0x86, 0xf9, 0xce, 0x5b, 0x97, 0xf7, 0xbb, 0x67, 0x81,
	0x09, 0x1e, 0xae, 0x31, 0x1e, 0x2e, 0xbb, 0x6b, 0x59, 0x1e, 0xb2, 0xd2, 0xfe, 0x3d, 0x0b, 0x56,
	0xf4, 0x9b, 0x75, 0xf4, 0xce, 0x19, 0x17, 0xef, 0x9c, 0x87, 0x1b, 0x73, 0x5d, 0xcf, 0x9b, 0xf5,
	0xde, 0x19, 0xc5, 0x31, 0x8d, 0x0d, 0xe2, 0x85, 0x0b, 0xe5, 0xe4, 0x14, 0x1a, 0xca, 0xcb, 0x0f,
	0x64, 0xf2, 0x53, 0xf5, 0x1d, 0x89, 0xe3, 0xce, 0x02, 0x31, 0x89, 0x20, 0x2d, 0x47, 0x32, 0xde,
	0x4c, 0x58, 0x9a, 0x49, 0x6b, 0x12, 0x4d, 0xf9, 0x86, 0xa7, 0x25, 0xf9, 0x84, 0x93, 0x7b, 0x16,
	0x22, 0xa9, 0xa2, 0x4b, 0x2a, 0xd5, 0xaf, 0x44, 0xaa, 0x7b, 0x85, 0xbe, 0xc7, 0xd5, 0xaf, 0x3e,
	0x16, 0xca, 0xab, 0xdf, 0xf8, 0x0e, 0x2b, 0xaf, 0x7e, 0xf3, 0x9b, 0x23, 0x77, 0x93, 0x71, 0xe1,
	0xb8, 0x17, 0x54, 0x2e, 0x32, 0x52, 0xff, 0x5d, 0x0b, 0xce, 0x69, 0xaf, 0x84, 0x90, 0xfa, 0xaa,
	0xc0, 0xfc, 0xf0, 0x48, 0xcb, 0x38, 0x05, 0x0f, 0x8d, 0xdc, 0x5b, 0x8c, 0x01, 0x17, 0x6d, 0x6a,
	0x62, 0x10, 0x3f, 0x5f, 0xb5, 0x4e, 0x04, 0x22, 0xea, 0xc2, 0x82, 0x68, 0xa3, 0xd0, 0x15, 0x7d,
	0x77, 0x99, 0xbe, 0x55, 0x4b, 0x11, 0x5a, 0xe7, 0xe5, 0xbe, 0xc5, 0xe8, 0xad, 0xbb, 0xab, 0x2a,
	0x3d, 0xd6, 0x85, 0xd1, 0xed, 0xfe, 0xd0, 0x82, 0x35, 0xd3, 0x75, 0x32, 0xba, 0x35, 0xc7, 0x8d,
	0x33, 0x67, 0xe0, 0xf6, 0xdc, 0x77, 0xd3, 0xae, 0xcb, 0xb8, 0xd9, 0x70, 0x99, 0x11, 0x90, 0x29,
	0x40, 0xd2, 0xea, 0x32, 0x34, 0xc9, 0x91, 0xe9, 0x7a, 0x4c, 0xe3, 0x68, 0xc6, 0x45, 0xaa, 0xc6,
	0xd1, 0xac, 0xbb, 0xb6, 0x19, 0x1c, 0x4d, 0xfd, 0xe1, 0x8f, 0x2c, 0xb8, 0x60, 0xbc, 0x9b, 0xd4,
	0x4a, 0xa2, 0x59, 0xf7, 0x97, 0xaf, 0xc3, 0xd3, 0x4d, 0xc6, 0xd3, 0xdb, 0xee, 0x46, 0x01, 0x4f,
	0x2d, 0x7f, 0x44, 0x22, 0x11, 0xab, 0x50, 0xfe, 0x44, 0x04, 0xa9, 0xce, 0x50, 0x78, 0x38, 0xe3,
	0xdc, 0x3c, 0x13, 0xce, 0xe4, 0x35, 0x0a, 0x43, 0x49, 0x70, 0x14, 0x66, 0x62, 0xb7, 0x7a, 0xa6,
	0x9d, 0x77, 0x5e, 0xe3, 0xb1, 0x7e, 0xde, 0x79, 0xcd, 0x47, 0xe3, 0x6a, 0xe0, 0x52, 0xd8, 0x38,
	0xc4, 0x38, 0x95, 0x47, 0xee, 0xa2, 0x42, 0x97, 0x47, 0xd1, 0xc5, 0x87, 0x2e, 0x8f, 0xc2, 0x1b,
	0x8f, 0x59, 0xf2, 0xc0, 0x61, 0x97, 0x72, 0xf2, 0x03, 0x2e, 0x0f, 0x8d, 0x91, 0x9c, 0x3c, 0xcc,
	0x7c, 0xbc, 0x7b, 0x16, 0x98, 0x29, 0x96, 0x28, 0x6c, 0x7c, 0xc5, 0x5a, 0xe0, 0x57, 0x2d, 0x79,
	0xa7, 0x39, 0x81, 0xc5, 0xcc, 0x31, 0x1f, 0xba, 0x96, 0x13, 0xb8, 0x7a, 0x56, 0xe8, 0x6c, 0x16,
	0x03, 0xa8, 0x36, 0x8a, 0xae, 0x15, 0xd2, 0x16, 0x75, 0xf4, 0x9f, 0x58, 0xb0, 0x5e, 0x74, 0x75,
	0x8d, 0xee, 0x1a, 0x9c, 0xa2, 0xf0, 0x86, 0xfb, 0x75, 0x5c, 0xe8, 0x3a, 0x63, 0xef, 0xaa, 0xbb,
	0x9e, 0xd7, 0x10, 0x5f, 0x9e, 0x2a, 0x29, 0x82, 0x7a, 0xfa, 0xac, 0x09, 0x15, 0xbc, 0x86, 0x32,
	0x57, 0xad, 0xb9, 0xf7, 0x55, 0x33, 0x08, 0xf2, 0x73, 0x94, 0x09, 0x25, 0xa8, 0xa5, 0x38, 0xde,
	0xf7, 0x16, 0xa7, 0x38, 0xe5, 0xa0, 0xab, 0x38, 0xc5, 0xa9, 0x67, 0x53, 0x85, 0x29, 0x8e, 0x83,
	0x51, 0x36, 0xfe, 0x96, 0xb3, 0xa1, 0xde, 0x34, 0xe6, 0xd9, 0x30, 0xde, 0x31, 0xe7, 0xd9, 0x30,
	0x5f, 0x58, 0xba, 0x7b, 0x8c, 0x8d, 0xa7, 0xe8, 0x66, 0x91, 0x06, 0xa4, 0x60, 0x5a, 0x5f, 0x91,
	0xc9, 0x10, 0xbf, 0xfa, 0x35, 0x93, 0x1d, 0x6b, 0xa0, 0x92, 0x73, 0xf5, 0xd0, 0x25, 0xcf, 0xb9,
	0xf1, 0x18, 0x2d, 0xcf, 0xb9, 0xf9, 0xec, 0x66, 0x06, 0xe7, 0x42, 0x86, 0xf3, 0x70, 0xae, 0x81,
	0x66, 0xdc, 0x20, 0x7f, 0x30, 0x63, 0x74, 0x83, 0xc2, 0xf3, 0x9b, 0x6f, 0xc6, 0x0d, 0xa6, 0xe6,
	0xb0, 0xf3, 0x33, 0xfb, 0xc7, 0xdb, 0x7f, 0x61, 0xa3, 0x3d, 0x38, 0xf7, 0x74, 0x7b, 0x6f, 0xef,
	0x1e, 0x2f, 0x5a, 0x37, 0xb7, 0x9f, 0xed, 0xba, 0x3f, 0x07, 0x4b, 0x74, 0x6a, 0x73, 0x18, 0x47,
	0x5f, 0xe0, 0x0e, 0x41, 0x6b, 0x3d, 0x42, 0x86, 0xc9, 0xc3, 0x56, 0x6b, 0xe0, 0x27, 0x49, 0x88,
	0x49, 0x33, 0x8a, 0x8f, 0x5a, 0xce, 0x6a, 0x27, 0x0a, 0x89, 0xdf, 0x21, 0xbf, 0x94, 0x99, 0xbd,
	0xf3, 0xff, 0xb6, 0x4a, 0xf7, 0x9b, 0xef, 0xdd, 0xb1, 0xec, 0xad, 0x15, 0x7f, 0x38, 0xec, 0x07,
	0x1d, 0x76, 0x30, 0xdd, 0xfa, 0x22, 0x89, 0xc2, 0xad, 0x8b, 0xd9, 0x99, 0xf1, 0xbd, 0xc3, 0x28,
	0xba, 0x37, 0x08, 0x06, 0xf8, 0x61, 0x0e, 0xf2, 0x61, 0x01, 0xa4, 0x77, 0x0d, 0x4a, 0xdf, 0x7a,
	0xef, 0x7d, 0xb4, 0x0e, 0xcb, 0xdf, 0x8d, 0x36, 0x87, 0x38, 0x1e, 0x04, 0x09, 0x2d, 0x22, 0x9b,
	0xa8, 0x0a, 0xe5, 0x9f, 0xda, 0xd6, 0x82, 0x77, 0x85, 0x02, 0x7c, 0x0b, 0xad, 0x01, 0x7c, 0x37,
	0x22, 0x9b, 0x87, 0xd1, 0x28, 0xec, 0xa6, 0x1f, 0xe3, 0x07, 0x70, 0x55, 0xdb, 0xe9, 0xe6, 0xe3,
	0xa8, 0x33, 0x1a, 0xe0, 0x90, 0xff, 0x23, 0xa5, 0x79, 0x9f, 0x07, 0x55, 0x26, 0xf3, 0xf7, 0xff,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xfb, 0x8b, 0xef, 0xc4, 0x39, 0x00, 0x00,
}
